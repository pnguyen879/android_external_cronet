// Copyright (C) 2022 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This file is automatically generated by gn2bp/gen_android_bp. Do not edit.

build = ["Android.extras.bp"]
// GN: //base/allocator:buildflags
cc_genrule {
    name: "cronet_aml_base_allocator_buildflags",
    cmd: "mkdir -p $(genDir)/base/allocator && echo '--flags USE_PARTITION_ALLOC_AS_GWP_ASAN_STORE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/allocator/buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator:buildflags__testing
cc_genrule {
    name: "cronet_aml_base_allocator_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/allocator && echo '--flags USE_PARTITION_ALLOC_AS_GWP_ASAN_STORE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/allocator/buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:chromecast_buildflags
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromecast_buildflags",
    cmd: "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags PA_IS_CAST_ANDROID=\"false\" PA_IS_CASTOS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:chromecast_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/chromecast_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:chromecast_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromecast_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags PA_IS_CAST_ANDROID=\"false\" PA_IS_CASTOS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:chromecast_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/chromecast_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:chromeos_buildflags
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromeos_buildflags",
    cmd: "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags PA_IS_CHROMEOS_ASH=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:chromeos_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/chromeos_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:chromeos_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromeos_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags PA_IS_CHROMEOS_ASH=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:chromeos_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/chromeos_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_debugging_buildflags",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug/debugging_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_debugging_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ $$CC_OS != 'android' ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug && echo '--flags PA_DCHECK_IS_ON=\"false\" PA_EXPENSIVE_DCHECKS_ARE_ON=\"false\" PA_DCHECK_IS_CONFIGURABLE=\"false\" PA_CAN_UNWIND_WITH_FRAME_POINTERS=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    host_supported: true,
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/partition_alloc_base/debug/debugging_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_partition_alloc_buildflags",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"false\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"false\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"true\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"false\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"false\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/partition_alloc_buildflags.h",
    ],
    export_include_dirs: [
        ".",
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_partition_alloc_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"false\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"false\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"true\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"false\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"false\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ $$CC_OS != 'android' ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags HAS_64_BIT_POINTERS=\"true\" HAS_MEMORY_TAGGING=\"false\" USE_ALLOCATOR_SHIM=\"true\" USE_LARGE_EMPTY_SLOT_SPAN_RING=\"false\" USE_PARTITION_ALLOC=\"false\" USE_PARTITION_ALLOC_AS_MALLOC=\"false\" ENABLE_BACKUP_REF_PTR_SUPPORT=\"false\" ENABLE_BACKUP_REF_PTR_SLOW_CHECKS=\"false\" ENABLE_BACKUP_REF_PTR_FEATURE_FLAG=\"false\" ENABLE_BACKUP_REF_PTR_INSTANCE_TRACER=\"false\" ENABLE_DANGLING_RAW_PTR_CHECKS=\"false\" ENABLE_DANGLING_RAW_PTR_FEATURE_FLAG=\"false\" ENABLE_POINTER_SUBTRACTION_CHECK=\"false\" ENABLE_POINTER_ARITHMETIC_TRAIT_CHECK=\"true\" BACKUP_REF_PTR_EXTRA_OOB_CHECKS=\"false\" BACKUP_REF_PTR_POISON_OOB_PTR=\"false\" USE_ASAN_BACKUP_REF_PTR=\"false\" USE_ASAN_UNOWNED_PTR=\"false\" USE_HOOKABLE_RAW_PTR=\"false\" ENABLE_GWP_ASAN_SUPPORT=\"false\" FORCE_ENABLE_RAW_PTR_EXCLUSION=\"false\" USE_FULL_MTE=\"false\" RECORD_ALLOC_INFO=\"false\" USE_FREESLOT_BITMAP=\"false\" GLUE_CORE_POOLS=\"false\" ENABLE_POINTER_COMPRESSION=\"false\" ENABLE_SHADOW_METADATA_FOR_64_BITS_POINTERS=\"false\" USE_FREELIST_POOL_OFFSETS=\"true\" USE_STARSCAN=\"false\" STACK_SCAN_SUPPORTED=\"true\" ENABLE_PKEYS=\"false\" ENABLE_THREAD_ISOLATION=\"false\" FORWARD_THROUGH_MALLOC=\"false\" ASSERT_CPP_20=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:partition_alloc_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    host_supported: true,
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/partition_alloc_buildflags.h",
    ],
    export_include_dirs: [
        ".",
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:raw_ptr_buildflags
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr_buildflags",
    cmd: "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags RAW_PTR_ZERO_ON_CONSTRUCT=\"true\" RAW_PTR_ZERO_ON_MOVE=\"true\" RAW_PTR_ZERO_ON_DESTRUCT=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:raw_ptr_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/raw_ptr_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/allocator/partition_allocator/src/partition_alloc:raw_ptr_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/allocator/partition_allocator/src/partition_alloc && echo '--flags RAW_PTR_ZERO_ON_CONSTRUCT=\"true\" RAW_PTR_ZERO_ON_MOVE=\"true\" RAW_PTR_ZERO_ON_DESTRUCT=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base/allocator/partition_allocator/src/partition_alloc:raw_ptr_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/allocator/partition_allocator/src/partition_alloc/raw_ptr_buildflags.h",
    ],
    export_include_dirs: [
        "base/allocator/partition_allocator/src/",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:anchor_functions_buildflags
cc_genrule {
    name: "cronet_aml_base_anchor_functions_buildflags",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "base/android/library_loader/anchor_functions_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:anchor_functions_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_anchor_functions_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ $$CC_OS != 'android' ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/android/library_loader && echo '--flags USE_LLD=\"true\" SUPPORTS_CODE_ORDERING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:anchor_functions_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    host_supported: true,
    out: [
        "base/android/library_loader/anchor_functions_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:android_runtime_jni_headers__action
cc_genrule {
    name: "cronet_aml_base_android_runtime_jni_headers__action",
    tools: [
        ":javap",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/base/android_runtime_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-jar " +
         "--output-dir " +
         "$(genDir)/base/android_runtime_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--jar-file " +
         "$(location :current_android_jar) " +
         "--javap " +
         "$(location :javap) " +
         "--output-name " +
         "Runnable_jni.h " +
         "--output-name " +
         "Runtime_jni.h " +
         "--output-name " +
         "Throwable_jni.h " +
         "--input-file " +
         "java/lang/Runnable.class " +
         "--input-file " +
         "java/lang/Runtime.class " +
         "--input-file " +
         "java/lang/Throwable.class",
    out: [
        "base/android_runtime_jni_headers/Runnable_jni.h",
        "base/android_runtime_jni_headers/Runtime_jni.h",
        "base/android_runtime_jni_headers/Throwable_jni.h",
    ],
    tool_files: [
        ":current_android_jar",
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:android_runtime_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_base_android_runtime_jni_headers__action__testing",
    tools: [
        ":javap",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/base/android_runtime_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-jar " +
         "--output-dir " +
         "$(genDir)/base/android_runtime_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--jar-file " +
         "$(location :current_android_jar) " +
         "--javap " +
         "$(location :javap) " +
         "--output-name " +
         "Runnable_jni.h " +
         "--output-name " +
         "Runtime_jni.h " +
         "--output-name " +
         "Throwable_jni.h " +
         "--input-file " +
         "java/lang/Runnable.class " +
         "--input-file " +
         "java/lang/Runtime.class " +
         "--input-file " +
         "java/lang/Throwable.class",
    out: [
        "base/android_runtime_jni_headers/Runnable_jni.h",
        "base/android_runtime_jni_headers/Runtime_jni.h",
        "base/android_runtime_jni_headers/Throwable_jni.h",
    ],
    tool_files: [
        ":current_android_jar",
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_android_java_enums_srcjar
java_genrule {
    name: "cronet_aml_base_base_android_java_enums_srcjar",
    cmd: "mkdir -p $(genDir)/base && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location base/android/application_status_listener.h) " +
         "$(location base/android/child_process_binding_types.h) " +
         "$(location base/android/library_loader/library_loader_hooks.h) " +
         "$(location base/android/linker/linker_jni.h) " +
         "$(location base/android/task_scheduler/task_runner_android.h) " +
         "$(location base/android/task_scheduler/task_traits_android.h) " +
         "$(location base/memory/memory_pressure_listener.h) " +
         "$(location base/metrics/histogram_base.h) " +
         "$(location base/task/task_traits.h)",
    out: [
        "base/base_android_java_enums_srcjar.srcjar",
    ],
    tool_files: [
        "base/android/application_status_listener.h",
        "base/android/child_process_binding_types.h",
        "base/android/library_loader/library_loader_hooks.h",
        "base/android/linker/linker_jni.h",
        "base/android/task_scheduler/task_runner_android.h",
        "base/android/task_scheduler/task_traits_android.h",
        "base/memory/memory_pressure_listener.h",
        "base/metrics/histogram_base.h",
        "base/task/task_traits.h",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_android_java_enums_srcjar__testing
java_genrule {
    name: "cronet_aml_base_base_android_java_enums_srcjar__testing",
    cmd: "mkdir -p $(genDir)/base && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location base/android/application_status_listener.h) " +
         "$(location base/android/child_process_binding_types.h) " +
         "$(location base/android/library_loader/library_loader_hooks.h) " +
         "$(location base/android/linker/linker_jni.h) " +
         "$(location base/android/task_scheduler/task_runner_android.h) " +
         "$(location base/android/task_scheduler/task_traits_android.h) " +
         "$(location base/memory/memory_pressure_listener.h) " +
         "$(location base/metrics/histogram_base.h) " +
         "$(location base/task/task_traits.h)",
    out: [
        "base/base_android_java_enums_srcjar.srcjar",
    ],
    tool_files: [
        "base/android/application_status_listener.h",
        "base/android/child_process_binding_types.h",
        "base/android/library_loader/library_loader_hooks.h",
        "base/android/linker/linker_jni.h",
        "base/android/task_scheduler/task_runner_android.h",
        "base/android/task_scheduler/task_traits_android.h",
        "base/memory/memory_pressure_listener.h",
        "base/metrics/histogram_base.h",
        "base/task/task_traits.h",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_jni__action
cc_genrule {
    name: "cronet_aml_base_base_jni__action",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/base_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/base_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/base_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/base_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ApkAssets_jni.h " +
         "--output-name " +
         "ApplicationStatus_jni.h " +
         "--output-name " +
         "BuildInfo_jni.h " +
         "--output-name " +
         "BundleUtils_jni.h " +
         "--output-name " +
         "Callback_jni.h " +
         "--output-name " +
         "CommandLine_jni.h " +
         "--output-name " +
         "ContentUriUtils_jni.h " +
         "--output-name " +
         "CpuFeatures_jni.h " +
         "--output-name " +
         "EarlyTraceEvent_jni.h " +
         "--output-name " +
         "EventLog_jni.h " +
         "--output-name " +
         "FeatureList_jni.h " +
         "--output-name " +
         "FeatureMap_jni.h " +
         "--output-name " +
         "Features_jni.h " +
         "--output-name " +
         "FieldTrialList_jni.h " +
         "--output-name " +
         "FileUtils_jni.h " +
         "--output-name " +
         "ImportantFileWriterAndroid_jni.h " +
         "--output-name " +
         "InputHintChecker_jni.h " +
         "--output-name " +
         "IntStringCallback_jni.h " +
         "--output-name " +
         "JNIUtils_jni.h " +
         "--output-name " +
         "JavaExceptionReporter_jni.h " +
         "--output-name " +
         "JavaHandlerThread_jni.h " +
         "--output-name " +
         "JniAndroid_jni.h " +
         "--output-name " +
         "LocaleUtils_jni.h " +
         "--output-name " +
         "MemoryPressureListener_jni.h " +
         "--output-name " +
         "PathService_jni.h " +
         "--output-name " +
         "PathUtils_jni.h " +
         "--output-name " +
         "PowerMonitor_jni.h " +
         "--output-name " +
         "RadioUtils_jni.h " +
         "--output-name " +
         "SysUtils_jni.h " +
         "--output-name " +
         "ThreadUtils_jni.h " +
         "--output-name " +
         "TimezoneUtils_jni.h " +
         "--output-name " +
         "Token_jni.h " +
         "--output-name " +
         "TraceEvent_jni.h " +
         "--output-name " +
         "UnguessableToken_jni.h " +
         "--output-name " +
         "JankMetricUMARecorder_jni.h " +
         "--output-name " +
         "LibraryLoader_jni.h " +
         "--output-name " +
         "LibraryPrefetcher_jni.h " +
         "--output-name " +
         "JavaHeapDumpGenerator_jni.h " +
         "--output-name " +
         "MemoryInfoBridge_jni.h " +
         "--output-name " +
         "MemoryPurgeManager_jni.h " +
         "--output-name " +
         "NativeUmaRecorder_jni.h " +
         "--output-name " +
         "StatisticsRecorderAndroid_jni.h " +
         "--output-name " +
         "PostTask_jni.h " +
         "--output-name " +
         "TaskRunnerImpl_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApkAssets.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApplicationStatus.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BuildInfo.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BundleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Callback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CommandLine.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ContentUriUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CpuFeatures.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EarlyTraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EventLog.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureMap.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Features.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FieldTrialList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FileUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/InputHintChecker.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/IntStringCallback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JNIUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaExceptionReporter.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaHandlerThread.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JniAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/LocaleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/MemoryPressureListener.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathService.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PowerMonitor.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/RadioUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/SysUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ThreadUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TimezoneUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Token.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/UnguessableToken.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/PostTask.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "base/base_jni.srcjar",
        "base/base_jni/ApkAssets_jni.h",
        "base/base_jni/ApplicationStatus_jni.h",
        "base/base_jni/BuildInfo_jni.h",
        "base/base_jni/BundleUtils_jni.h",
        "base/base_jni/Callback_jni.h",
        "base/base_jni/CommandLine_jni.h",
        "base/base_jni/ContentUriUtils_jni.h",
        "base/base_jni/CpuFeatures_jni.h",
        "base/base_jni/EarlyTraceEvent_jni.h",
        "base/base_jni/EventLog_jni.h",
        "base/base_jni/FeatureList_jni.h",
        "base/base_jni/FeatureMap_jni.h",
        "base/base_jni/Features_jni.h",
        "base/base_jni/FieldTrialList_jni.h",
        "base/base_jni/FileUtils_jni.h",
        "base/base_jni/ImportantFileWriterAndroid_jni.h",
        "base/base_jni/InputHintChecker_jni.h",
        "base/base_jni/IntStringCallback_jni.h",
        "base/base_jni/JNIUtils_jni.h",
        "base/base_jni/JankMetricUMARecorder_jni.h",
        "base/base_jni/JavaExceptionReporter_jni.h",
        "base/base_jni/JavaHandlerThread_jni.h",
        "base/base_jni/JavaHeapDumpGenerator_jni.h",
        "base/base_jni/JniAndroid_jni.h",
        "base/base_jni/LibraryLoader_jni.h",
        "base/base_jni/LibraryPrefetcher_jni.h",
        "base/base_jni/LocaleUtils_jni.h",
        "base/base_jni/MemoryInfoBridge_jni.h",
        "base/base_jni/MemoryPressureListener_jni.h",
        "base/base_jni/MemoryPurgeManager_jni.h",
        "base/base_jni/NativeUmaRecorder_jni.h",
        "base/base_jni/PathService_jni.h",
        "base/base_jni/PathUtils_jni.h",
        "base/base_jni/PostTask_jni.h",
        "base/base_jni/PowerMonitor_jni.h",
        "base/base_jni/RadioUtils_jni.h",
        "base/base_jni/StatisticsRecorderAndroid_jni.h",
        "base/base_jni/SysUtils_jni.h",
        "base/base_jni/TaskRunnerImpl_jni.h",
        "base/base_jni/ThreadUtils_jni.h",
        "base/base_jni/TimezoneUtils_jni.h",
        "base/base_jni/Token_jni.h",
        "base/base_jni/TraceEvent_jni.h",
        "base/base_jni/UnguessableToken_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_jni__action
java_genrule {
    name: "cronet_aml_base_base_jni__action__java",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/base_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/base_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/base_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/base_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ApkAssets_jni.h " +
         "--output-name " +
         "ApplicationStatus_jni.h " +
         "--output-name " +
         "BuildInfo_jni.h " +
         "--output-name " +
         "BundleUtils_jni.h " +
         "--output-name " +
         "Callback_jni.h " +
         "--output-name " +
         "CommandLine_jni.h " +
         "--output-name " +
         "ContentUriUtils_jni.h " +
         "--output-name " +
         "CpuFeatures_jni.h " +
         "--output-name " +
         "EarlyTraceEvent_jni.h " +
         "--output-name " +
         "EventLog_jni.h " +
         "--output-name " +
         "FeatureList_jni.h " +
         "--output-name " +
         "FeatureMap_jni.h " +
         "--output-name " +
         "Features_jni.h " +
         "--output-name " +
         "FieldTrialList_jni.h " +
         "--output-name " +
         "FileUtils_jni.h " +
         "--output-name " +
         "ImportantFileWriterAndroid_jni.h " +
         "--output-name " +
         "InputHintChecker_jni.h " +
         "--output-name " +
         "IntStringCallback_jni.h " +
         "--output-name " +
         "JNIUtils_jni.h " +
         "--output-name " +
         "JavaExceptionReporter_jni.h " +
         "--output-name " +
         "JavaHandlerThread_jni.h " +
         "--output-name " +
         "JniAndroid_jni.h " +
         "--output-name " +
         "LocaleUtils_jni.h " +
         "--output-name " +
         "MemoryPressureListener_jni.h " +
         "--output-name " +
         "PathService_jni.h " +
         "--output-name " +
         "PathUtils_jni.h " +
         "--output-name " +
         "PowerMonitor_jni.h " +
         "--output-name " +
         "RadioUtils_jni.h " +
         "--output-name " +
         "SysUtils_jni.h " +
         "--output-name " +
         "ThreadUtils_jni.h " +
         "--output-name " +
         "TimezoneUtils_jni.h " +
         "--output-name " +
         "Token_jni.h " +
         "--output-name " +
         "TraceEvent_jni.h " +
         "--output-name " +
         "UnguessableToken_jni.h " +
         "--output-name " +
         "JankMetricUMARecorder_jni.h " +
         "--output-name " +
         "LibraryLoader_jni.h " +
         "--output-name " +
         "LibraryPrefetcher_jni.h " +
         "--output-name " +
         "JavaHeapDumpGenerator_jni.h " +
         "--output-name " +
         "MemoryInfoBridge_jni.h " +
         "--output-name " +
         "MemoryPurgeManager_jni.h " +
         "--output-name " +
         "NativeUmaRecorder_jni.h " +
         "--output-name " +
         "StatisticsRecorderAndroid_jni.h " +
         "--output-name " +
         "PostTask_jni.h " +
         "--output-name " +
         "TaskRunnerImpl_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApkAssets.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApplicationStatus.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BuildInfo.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BundleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Callback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CommandLine.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ContentUriUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CpuFeatures.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EarlyTraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EventLog.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureMap.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Features.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FieldTrialList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FileUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/InputHintChecker.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/IntStringCallback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JNIUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaExceptionReporter.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaHandlerThread.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JniAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/LocaleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/MemoryPressureListener.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathService.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PowerMonitor.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/RadioUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/SysUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ThreadUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TimezoneUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Token.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/UnguessableToken.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/PostTask.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "base/base_jni.srcjar",
        "base/base_jni/ApkAssets_jni.h",
        "base/base_jni/ApplicationStatus_jni.h",
        "base/base_jni/BuildInfo_jni.h",
        "base/base_jni/BundleUtils_jni.h",
        "base/base_jni/Callback_jni.h",
        "base/base_jni/CommandLine_jni.h",
        "base/base_jni/ContentUriUtils_jni.h",
        "base/base_jni/CpuFeatures_jni.h",
        "base/base_jni/EarlyTraceEvent_jni.h",
        "base/base_jni/EventLog_jni.h",
        "base/base_jni/FeatureList_jni.h",
        "base/base_jni/FeatureMap_jni.h",
        "base/base_jni/Features_jni.h",
        "base/base_jni/FieldTrialList_jni.h",
        "base/base_jni/FileUtils_jni.h",
        "base/base_jni/ImportantFileWriterAndroid_jni.h",
        "base/base_jni/InputHintChecker_jni.h",
        "base/base_jni/IntStringCallback_jni.h",
        "base/base_jni/JNIUtils_jni.h",
        "base/base_jni/JankMetricUMARecorder_jni.h",
        "base/base_jni/JavaExceptionReporter_jni.h",
        "base/base_jni/JavaHandlerThread_jni.h",
        "base/base_jni/JavaHeapDumpGenerator_jni.h",
        "base/base_jni/JniAndroid_jni.h",
        "base/base_jni/LibraryLoader_jni.h",
        "base/base_jni/LibraryPrefetcher_jni.h",
        "base/base_jni/LocaleUtils_jni.h",
        "base/base_jni/MemoryInfoBridge_jni.h",
        "base/base_jni/MemoryPressureListener_jni.h",
        "base/base_jni/MemoryPurgeManager_jni.h",
        "base/base_jni/NativeUmaRecorder_jni.h",
        "base/base_jni/PathService_jni.h",
        "base/base_jni/PathUtils_jni.h",
        "base/base_jni/PostTask_jni.h",
        "base/base_jni/PowerMonitor_jni.h",
        "base/base_jni/RadioUtils_jni.h",
        "base/base_jni/StatisticsRecorderAndroid_jni.h",
        "base/base_jni/SysUtils_jni.h",
        "base/base_jni/TaskRunnerImpl_jni.h",
        "base/base_jni/ThreadUtils_jni.h",
        "base/base_jni/TimezoneUtils_jni.h",
        "base/base_jni/Token_jni.h",
        "base/base_jni/TraceEvent_jni.h",
        "base/base_jni/UnguessableToken_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_jni__action__testing
cc_genrule {
    name: "cronet_aml_base_base_jni__action__testing",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/base_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/base_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/base_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/base_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ApkAssets_jni.h " +
         "--output-name " +
         "ApplicationStatus_jni.h " +
         "--output-name " +
         "BuildInfo_jni.h " +
         "--output-name " +
         "BundleUtils_jni.h " +
         "--output-name " +
         "Callback_jni.h " +
         "--output-name " +
         "CommandLine_jni.h " +
         "--output-name " +
         "ContentUriUtils_jni.h " +
         "--output-name " +
         "CpuFeatures_jni.h " +
         "--output-name " +
         "EarlyTraceEvent_jni.h " +
         "--output-name " +
         "EventLog_jni.h " +
         "--output-name " +
         "FeatureList_jni.h " +
         "--output-name " +
         "FeatureMap_jni.h " +
         "--output-name " +
         "Features_jni.h " +
         "--output-name " +
         "FieldTrialList_jni.h " +
         "--output-name " +
         "FileUtils_jni.h " +
         "--output-name " +
         "ImportantFileWriterAndroid_jni.h " +
         "--output-name " +
         "InputHintChecker_jni.h " +
         "--output-name " +
         "IntStringCallback_jni.h " +
         "--output-name " +
         "JNIUtils_jni.h " +
         "--output-name " +
         "JavaExceptionReporter_jni.h " +
         "--output-name " +
         "JavaHandlerThread_jni.h " +
         "--output-name " +
         "JniAndroid_jni.h " +
         "--output-name " +
         "LocaleUtils_jni.h " +
         "--output-name " +
         "MemoryPressureListener_jni.h " +
         "--output-name " +
         "PathService_jni.h " +
         "--output-name " +
         "PathUtils_jni.h " +
         "--output-name " +
         "PowerMonitor_jni.h " +
         "--output-name " +
         "RadioUtils_jni.h " +
         "--output-name " +
         "SysUtils_jni.h " +
         "--output-name " +
         "ThreadUtils_jni.h " +
         "--output-name " +
         "TimezoneUtils_jni.h " +
         "--output-name " +
         "Token_jni.h " +
         "--output-name " +
         "TraceEvent_jni.h " +
         "--output-name " +
         "UnguessableToken_jni.h " +
         "--output-name " +
         "JankMetricUMARecorder_jni.h " +
         "--output-name " +
         "LibraryLoader_jni.h " +
         "--output-name " +
         "LibraryPrefetcher_jni.h " +
         "--output-name " +
         "JavaHeapDumpGenerator_jni.h " +
         "--output-name " +
         "MemoryInfoBridge_jni.h " +
         "--output-name " +
         "MemoryPurgeManager_jni.h " +
         "--output-name " +
         "NativeUmaRecorder_jni.h " +
         "--output-name " +
         "StatisticsRecorderAndroid_jni.h " +
         "--output-name " +
         "PostTask_jni.h " +
         "--output-name " +
         "TaskRunnerImpl_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApkAssets.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApplicationStatus.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BuildInfo.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BundleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Callback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CommandLine.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ContentUriUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CpuFeatures.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EarlyTraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EventLog.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureMap.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Features.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FieldTrialList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FileUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/InputHintChecker.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/IntStringCallback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JNIUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaExceptionReporter.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaHandlerThread.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JniAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/LocaleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/MemoryPressureListener.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathService.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PowerMonitor.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/RadioUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/SysUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ThreadUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TimezoneUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Token.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/UnguessableToken.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/PostTask.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java)",
    out: [
        "base/base_jni.srcjar",
        "base/base_jni/ApkAssets_jni.h",
        "base/base_jni/ApplicationStatus_jni.h",
        "base/base_jni/BuildInfo_jni.h",
        "base/base_jni/BundleUtils_jni.h",
        "base/base_jni/Callback_jni.h",
        "base/base_jni/CommandLine_jni.h",
        "base/base_jni/ContentUriUtils_jni.h",
        "base/base_jni/CpuFeatures_jni.h",
        "base/base_jni/EarlyTraceEvent_jni.h",
        "base/base_jni/EventLog_jni.h",
        "base/base_jni/FeatureList_jni.h",
        "base/base_jni/FeatureMap_jni.h",
        "base/base_jni/Features_jni.h",
        "base/base_jni/FieldTrialList_jni.h",
        "base/base_jni/FileUtils_jni.h",
        "base/base_jni/ImportantFileWriterAndroid_jni.h",
        "base/base_jni/InputHintChecker_jni.h",
        "base/base_jni/IntStringCallback_jni.h",
        "base/base_jni/JNIUtils_jni.h",
        "base/base_jni/JankMetricUMARecorder_jni.h",
        "base/base_jni/JavaExceptionReporter_jni.h",
        "base/base_jni/JavaHandlerThread_jni.h",
        "base/base_jni/JavaHeapDumpGenerator_jni.h",
        "base/base_jni/JniAndroid_jni.h",
        "base/base_jni/LibraryLoader_jni.h",
        "base/base_jni/LibraryPrefetcher_jni.h",
        "base/base_jni/LocaleUtils_jni.h",
        "base/base_jni/MemoryInfoBridge_jni.h",
        "base/base_jni/MemoryPressureListener_jni.h",
        "base/base_jni/MemoryPurgeManager_jni.h",
        "base/base_jni/NativeUmaRecorder_jni.h",
        "base/base_jni/PathService_jni.h",
        "base/base_jni/PathUtils_jni.h",
        "base/base_jni/PostTask_jni.h",
        "base/base_jni/PowerMonitor_jni.h",
        "base/base_jni/RadioUtils_jni.h",
        "base/base_jni/StatisticsRecorderAndroid_jni.h",
        "base/base_jni/SysUtils_jni.h",
        "base/base_jni/TaskRunnerImpl_jni.h",
        "base/base_jni/ThreadUtils_jni.h",
        "base/base_jni/TimezoneUtils_jni.h",
        "base/base_jni/Token_jni.h",
        "base/base_jni/TraceEvent_jni.h",
        "base/base_jni/UnguessableToken_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_jni__action__testing
java_genrule {
    name: "cronet_aml_base_base_jni__action__testing__java",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/base_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/base_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/base_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/base_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ApkAssets_jni.h " +
         "--output-name " +
         "ApplicationStatus_jni.h " +
         "--output-name " +
         "BuildInfo_jni.h " +
         "--output-name " +
         "BundleUtils_jni.h " +
         "--output-name " +
         "Callback_jni.h " +
         "--output-name " +
         "CommandLine_jni.h " +
         "--output-name " +
         "ContentUriUtils_jni.h " +
         "--output-name " +
         "CpuFeatures_jni.h " +
         "--output-name " +
         "EarlyTraceEvent_jni.h " +
         "--output-name " +
         "EventLog_jni.h " +
         "--output-name " +
         "FeatureList_jni.h " +
         "--output-name " +
         "FeatureMap_jni.h " +
         "--output-name " +
         "Features_jni.h " +
         "--output-name " +
         "FieldTrialList_jni.h " +
         "--output-name " +
         "FileUtils_jni.h " +
         "--output-name " +
         "ImportantFileWriterAndroid_jni.h " +
         "--output-name " +
         "InputHintChecker_jni.h " +
         "--output-name " +
         "IntStringCallback_jni.h " +
         "--output-name " +
         "JNIUtils_jni.h " +
         "--output-name " +
         "JavaExceptionReporter_jni.h " +
         "--output-name " +
         "JavaHandlerThread_jni.h " +
         "--output-name " +
         "JniAndroid_jni.h " +
         "--output-name " +
         "LocaleUtils_jni.h " +
         "--output-name " +
         "MemoryPressureListener_jni.h " +
         "--output-name " +
         "PathService_jni.h " +
         "--output-name " +
         "PathUtils_jni.h " +
         "--output-name " +
         "PowerMonitor_jni.h " +
         "--output-name " +
         "RadioUtils_jni.h " +
         "--output-name " +
         "SysUtils_jni.h " +
         "--output-name " +
         "ThreadUtils_jni.h " +
         "--output-name " +
         "TimezoneUtils_jni.h " +
         "--output-name " +
         "Token_jni.h " +
         "--output-name " +
         "TraceEvent_jni.h " +
         "--output-name " +
         "UnguessableToken_jni.h " +
         "--output-name " +
         "JankMetricUMARecorder_jni.h " +
         "--output-name " +
         "LibraryLoader_jni.h " +
         "--output-name " +
         "LibraryPrefetcher_jni.h " +
         "--output-name " +
         "JavaHeapDumpGenerator_jni.h " +
         "--output-name " +
         "MemoryInfoBridge_jni.h " +
         "--output-name " +
         "MemoryPurgeManager_jni.h " +
         "--output-name " +
         "NativeUmaRecorder_jni.h " +
         "--output-name " +
         "StatisticsRecorderAndroid_jni.h " +
         "--output-name " +
         "PostTask_jni.h " +
         "--output-name " +
         "TaskRunnerImpl_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApkAssets.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ApplicationStatus.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BuildInfo.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/BundleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Callback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CommandLine.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ContentUriUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/CpuFeatures.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EarlyTraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/EventLog.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FeatureMap.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Features.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FieldTrialList.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/FileUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/InputHintChecker.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/IntStringCallback.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JNIUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaExceptionReporter.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JavaHandlerThread.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/JniAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/LocaleUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/MemoryPressureListener.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathService.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PathUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/PowerMonitor.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/RadioUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/SysUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/ThreadUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TimezoneUtils.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/Token.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/TraceEvent.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/UnguessableToken.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/PostTask.java) " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java)",
    out: [
        "base/base_jni.srcjar",
        "base/base_jni/ApkAssets_jni.h",
        "base/base_jni/ApplicationStatus_jni.h",
        "base/base_jni/BuildInfo_jni.h",
        "base/base_jni/BundleUtils_jni.h",
        "base/base_jni/Callback_jni.h",
        "base/base_jni/CommandLine_jni.h",
        "base/base_jni/ContentUriUtils_jni.h",
        "base/base_jni/CpuFeatures_jni.h",
        "base/base_jni/EarlyTraceEvent_jni.h",
        "base/base_jni/EventLog_jni.h",
        "base/base_jni/FeatureList_jni.h",
        "base/base_jni/FeatureMap_jni.h",
        "base/base_jni/Features_jni.h",
        "base/base_jni/FieldTrialList_jni.h",
        "base/base_jni/FileUtils_jni.h",
        "base/base_jni/ImportantFileWriterAndroid_jni.h",
        "base/base_jni/InputHintChecker_jni.h",
        "base/base_jni/IntStringCallback_jni.h",
        "base/base_jni/JNIUtils_jni.h",
        "base/base_jni/JankMetricUMARecorder_jni.h",
        "base/base_jni/JavaExceptionReporter_jni.h",
        "base/base_jni/JavaHandlerThread_jni.h",
        "base/base_jni/JavaHeapDumpGenerator_jni.h",
        "base/base_jni/JniAndroid_jni.h",
        "base/base_jni/LibraryLoader_jni.h",
        "base/base_jni/LibraryPrefetcher_jni.h",
        "base/base_jni/LocaleUtils_jni.h",
        "base/base_jni/MemoryInfoBridge_jni.h",
        "base/base_jni/MemoryPressureListener_jni.h",
        "base/base_jni/MemoryPurgeManager_jni.h",
        "base/base_jni/NativeUmaRecorder_jni.h",
        "base/base_jni/PathService_jni.h",
        "base/base_jni/PathUtils_jni.h",
        "base/base_jni/PostTask_jni.h",
        "base/base_jni/PowerMonitor_jni.h",
        "base/base_jni/RadioUtils_jni.h",
        "base/base_jni/StatisticsRecorderAndroid_jni.h",
        "base/base_jni/SysUtils_jni.h",
        "base/base_jni/TaskRunnerImpl_jni.h",
        "base/base_jni/ThreadUtils_jni.h",
        "base/base_jni/TimezoneUtils_jni.h",
        "base/base_jni/Token_jni.h",
        "base/base_jni/TraceEvent_jni.h",
        "base/base_jni/UnguessableToken_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_shared_preferences_jni__action
cc_genrule {
    name: "cronet_aml_base_base_shared_preferences_jni__action",
    srcs: [
        "base/android/java/src/org/chromium/base/shared_preferences/SharedPreferencesManager.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/base_shared_preferences_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/base_shared_preferences_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/base_shared_preferences_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/base_shared_preferences_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "SharedPreferencesManager_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/shared_preferences/SharedPreferencesManager.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "base/base_shared_preferences_jni.srcjar",
        "base/base_shared_preferences_jni/SharedPreferencesManager_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:base_shared_preferences_jni__action__testing
cc_genrule {
    name: "cronet_aml_base_base_shared_preferences_jni__action__testing",
    srcs: [
        "base/android/java/src/org/chromium/base/shared_preferences/SharedPreferencesManager.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/base_shared_preferences_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/base_shared_preferences_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/base_shared_preferences_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/base_shared_preferences_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "SharedPreferencesManager_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/shared_preferences/SharedPreferencesManager.java)",
    out: [
        "base/base_shared_preferences_jni.srcjar",
        "base/base_shared_preferences_jni/SharedPreferencesManager_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:build_date
cc_genrule {
    name: "cronet_aml_base_build_date",
    cmd: "mkdir -p $(genDir)/base && $(location base/write_build_date_header.py) $(out) " +
         "1727080216",
    out: [
        "base/generated_build_date.h",
    ],
    tool_files: [
        "base/write_build_date_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:build_date__testing
cc_genrule {
    name: "cronet_aml_base_build_date__testing",
    cmd: "mkdir -p $(genDir)/base && $(location base/write_build_date_header.py) $(out) " +
         "1727080216",
    host_supported: true,
    out: [
        "base/generated_build_date.h",
    ],
    tool_files: [
        "base/write_build_date_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:cfi_buildflags
cc_genrule {
    name: "cronet_aml_base_cfi_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags CFI_CAST_CHECK=\"false && false\" CFI_DIAG=\"false && false\" CFI_ICALL_CHECK=\"false && false\" CFI_ENFORCEMENT_TRAP=\"false && !false\" CFI_ENFORCEMENT_DIAGNOSTIC=\"false && false && !false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:cfi_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/cfi_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:cfi_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_cfi_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags CFI_CAST_CHECK=\"false && false\" CFI_DIAG=\"false && false\" CFI_ICALL_CHECK=\"false && false\" CFI_ENFORCEMENT_TRAP=\"false && !false\" CFI_ENFORCEMENT_DIAGNOSTIC=\"false && false && !false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:cfi_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/cfi_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:check_version_internal_action
cc_genrule {
    name: "cronet_aml_base_check_version_internal_action",
    cmd: "mkdir -p $(genDir)/base && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-e " +
         "'VERSION_MAJOR=\"%s\" % (MAJOR)' " +
         "-e " +
         "'NEXT_VERSION_MAJOR=\"%d\" % (int(MAJOR) + 1)' " +
         "-o " +
         "$(out) " +
         "$(location base/check_version_internal.h.in)",
    out: [
        "base/check_version_internal.h",
    ],
    tool_files: [
        "base/check_version_internal.h.in",
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:check_version_internal_action__testing
cc_genrule {
    name: "cronet_aml_base_check_version_internal_action__testing",
    cmd: "mkdir -p $(genDir)/base && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-e " +
         "'VERSION_MAJOR=\"%s\" % (MAJOR)' " +
         "-e " +
         "'NEXT_VERSION_MAJOR=\"%d\" % (int(MAJOR) + 1)' " +
         "-o " +
         "$(out) " +
         "$(location base/check_version_internal.h.in)",
    host_supported: true,
    out: [
        "base/check_version_internal.h",
    ],
    tool_files: [
        "base/check_version_internal.h.in",
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:clang_profiling_buildflags
cc_genrule {
    name: "cronet_aml_base_clang_profiling_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags CLANG_PROFILING=\"false\" CLANG_PROFILING_INSIDE_SANDBOX=\"false\" USE_CLANG_COVERAGE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:clang_profiling_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/clang_profiling_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:clang_profiling_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_clang_profiling_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags CLANG_PROFILING=\"false\" CLANG_PROFILING_INSIDE_SANDBOX=\"false\" USE_CLANG_COVERAGE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:clang_profiling_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/clang_profiling_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:debugging_buildflags
cc_genrule {
    name: "cronet_aml_base_debugging_buildflags",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"true\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"true\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "base/debug/debugging_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:debugging_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_debugging_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"true\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"true\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"false\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ $$CC_OS != 'android' ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/debug && echo '--flags DCHECK_IS_CONFIGURABLE=\"false\" ENABLE_PROFILING=\"false\" CAN_UNWIND_WITH_FRAME_POINTERS=\"true\" UNSAFE_DEVELOPER_BUILD=\"false\" CAN_UNWIND_WITH_CFI_TABLE=\"false\" EXCLUDE_UNWIND_TABLES=\"true\" ENABLE_GDBINIT_WARNING=\"false\" ENABLE_LLDBINIT_WARNING=\"false\" EXPENSIVE_DCHECKS_ARE_ON=\"false\" ENABLE_STACK_TRACE_LINE_NUMBERS=\"true\" ENABLE_COMMANDLINE_SEQUENCE_CHECKS=\"false\" ENABLE_ALLOCATION_STACK_TRACE_RECORDER=\"false\" ENABLE_ALLOCATION_TRACE_RECORDER_FULL_REPORTING=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:debugging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    host_supported: true,
    out: [
        "base/debug/debugging_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:feature_list_buildflags
cc_genrule {
    name: "cronet_aml_base_feature_list_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags ENABLE_BANNED_BASE_FEATURE_PREFIX=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:feature_list_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/feature_list_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:feature_list_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_feature_list_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags ENABLE_BANNED_BASE_FEATURE_PREFIX=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:feature_list_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/feature_list_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:fuzzing_buildflags
cc_genrule {
    name: "cronet_aml_base_fuzzing_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags USE_FUZZING_ENGINE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:fuzzing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/fuzzing_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:fuzzing_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_fuzzing_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags USE_FUZZING_ENGINE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:fuzzing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/fuzzing_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:ios_cronet_buildflags
cc_genrule {
    name: "cronet_aml_base_ios_cronet_buildflags",
    cmd: "mkdir -p $(genDir)/base/message_loop && echo '--flags CRONET_BUILD=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:ios_cronet_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/message_loop/ios_cronet_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:ios_cronet_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_ios_cronet_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/message_loop && echo '--flags CRONET_BUILD=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:ios_cronet_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/message_loop/ios_cronet_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:java_features_srcjar
java_genrule {
    name: "cronet_aml_base_java_features_srcjar",
    srcs: [
        "base/allocator/partition_alloc_features.cc",
        "base/features.cc",
        "base/task/task_features.cc",
    ],
    cmd: "mkdir -p $(genDir)/base && $(location build/android/gyp/java_cpp_features.py) --srcjar " +
         "$(out) " +
         "--template " +
         "$(location base/android/java/src/org/chromium/base/BaseFeatures.java.tmpl) " +
         "$(location base/allocator/partition_alloc_features.cc) " +
         "$(location base/features.cc) " +
         "$(location base/task/task_features.cc)",
    out: [
        "base/java_features_srcjar.srcjar",
    ],
    tool_files: [
        "base/android/java/src/org/chromium/base/BaseFeatures.java.tmpl",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_features.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:java_features_srcjar__testing
java_genrule {
    name: "cronet_aml_base_java_features_srcjar__testing",
    srcs: [
        "base/allocator/partition_alloc_features.cc",
        "base/features.cc",
        "base/task/task_features.cc",
    ],
    cmd: "mkdir -p $(genDir)/base && $(location build/android/gyp/java_cpp_features.py) --srcjar " +
         "$(out) " +
         "--template " +
         "$(location base/android/java/src/org/chromium/base/BaseFeatures.java.tmpl) " +
         "$(location base/allocator/partition_alloc_features.cc) " +
         "$(location base/features.cc) " +
         "$(location base/task/task_features.cc)",
    out: [
        "base/java_features_srcjar.srcjar",
    ],
    tool_files: [
        "base/android/java/src/org/chromium/base/BaseFeatures.java.tmpl",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_features.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:java_switches_srcjar
java_genrule {
    name: "cronet_aml_base_java_switches_srcjar",
    srcs: [
        "base/base_switches.cc",
    ],
    cmd: "mkdir -p $(genDir)/base && $(location build/android/gyp/java_cpp_strings.py) --srcjar " +
         "$(out) " +
         "--template " +
         "$(location base/android/java/src/org/chromium/base/BaseSwitches.java.tmpl) " +
         "$(location base/base_switches.cc)",
    out: [
        "base/java_switches_srcjar.srcjar",
    ],
    tool_files: [
        "base/android/java/src/org/chromium/base/BaseSwitches.java.tmpl",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_strings.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:java_switches_srcjar__testing
java_genrule {
    name: "cronet_aml_base_java_switches_srcjar__testing",
    srcs: [
        "base/base_switches.cc",
    ],
    cmd: "mkdir -p $(genDir)/base && $(location build/android/gyp/java_cpp_strings.py) --srcjar " +
         "$(out) " +
         "--template " +
         "$(location base/android/java/src/org/chromium/base/BaseSwitches.java.tmpl) " +
         "$(location base/base_switches.cc)",
    out: [
        "base/java_switches_srcjar.srcjar",
    ],
    tool_files: [
        "base/android/java/src/org/chromium/base/BaseSwitches.java.tmpl",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_strings.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:logging_buildflags
cc_genrule {
    name: "cronet_aml_base_logging_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags ENABLE_LOG_ERROR_NOT_REACHED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:logging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/logging_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:logging_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_logging_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags ENABLE_LOG_ERROR_NOT_REACHED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:logging_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/logging_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:message_pump_buildflags
cc_genrule {
    name: "cronet_aml_base_message_pump_buildflags",
    cmd: "mkdir -p $(genDir)/base/message_loop && echo '--flags ENABLE_MESSAGE_PUMP_EPOLL=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:message_pump_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/message_loop/message_pump_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:message_pump_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_message_pump_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/message_loop && echo '--flags ENABLE_MESSAGE_PUMP_EPOLL=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:message_pump_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/message_loop/message_pump_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:orderfile_buildflags
cc_genrule {
    name: "cronet_aml_base_orderfile_buildflags",
    cmd: "mkdir -p $(genDir)/base/android/orderfile && echo '--flags DEVTOOLS_INSTRUMENTATION_DUMPING=\"false\" ORDERFILE_INSTRUMENTATION=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:orderfile_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/android/orderfile/orderfile_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:orderfile_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_orderfile_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/android/orderfile && echo '--flags DEVTOOLS_INSTRUMENTATION_DUMPING=\"false\" ORDERFILE_INSTRUMENTATION=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:orderfile_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/android/orderfile/orderfile_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:power_monitor_buildflags
cc_genrule {
    name: "cronet_aml_base_power_monitor_buildflags",
    cmd: "mkdir -p $(genDir)/base/power_monitor && echo '--flags HAS_BATTERY_LEVEL_PROVIDER_IMPL=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:power_monitor_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/power_monitor/power_monitor_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:power_monitor_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_power_monitor_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/power_monitor && echo '--flags HAS_BATTERY_LEVEL_PROVIDER_IMPL=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:power_monitor_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/power_monitor/power_monitor_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:process_launcher_jni__action
cc_genrule {
    name: "cronet_aml_base_process_launcher_jni__action",
    srcs: [
        "base/android/java/src/org/chromium/base/process_launcher/ChildProcessService.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/process_launcher_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/process_launcher_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/process_launcher_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/process_launcher_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ChildProcessService_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/process_launcher/ChildProcessService.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "base/process_launcher_jni.srcjar",
        "base/process_launcher_jni/ChildProcessService_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:process_launcher_jni__action__testing
cc_genrule {
    name: "cronet_aml_base_process_launcher_jni__action__testing",
    srcs: [
        "base/android/java/src/org/chromium/base/process_launcher/ChildProcessService.java",
    ],
    cmd: "mkdir -p $(genDir)/base &&  " +
         "mkdir -p $(genDir)/jni_headers/base/process_launcher_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/process_launcher_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/process_launcher_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/process_launcher_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ChildProcessService_jni.h " +
         "--input-file " +
         "$(location base/android/java/src/org/chromium/base/process_launcher/ChildProcessService.java)",
    out: [
        "base/process_launcher_jni.srcjar",
        "base/process_launcher_jni/ChildProcessService_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:profiler_buildflags
cc_genrule {
    name: "cronet_aml_base_profiler_buildflags",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"true\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "base/profiler/profiler_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:profiler_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_profiler_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"true\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ $$CC_OS != 'android' ]]; " +
         "then " +
         "mkdir -p $(genDir)/base/profiler && echo '--flags ENABLE_ARM_CFI_TABLE=\"false\" IOS_STACK_PROFILER_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:profiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    host_supported: true,
    out: [
        "base/profiler/profiler_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:protected_memory_buildflags
cc_genrule {
    name: "cronet_aml_base_protected_memory_buildflags",
    cmd: "mkdir -p $(genDir)/base/memory && echo '--flags PROTECTED_MEMORY_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:protected_memory_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/memory/protected_memory_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:protected_memory_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_protected_memory_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/memory && echo '--flags PROTECTED_MEMORY_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:protected_memory_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/memory/protected_memory_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:rust_buildflags
cc_genrule {
    name: "cronet_aml_base_rust_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags BUILD_RUST_JSON_READER=\"false\" BUILD_RUST_BASE_CONVERSIONS=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:rust_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/rust_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:rust_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_rust_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags BUILD_RUST_JSON_READER=\"false\" BUILD_RUST_BASE_CONVERSIONS=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:rust_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/rust_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:sanitizer_buildflags
cc_genrule {
    name: "cronet_aml_base_sanitizer_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags IS_HWASAN=\"false\" USING_SANITIZER=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:sanitizer_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/sanitizer_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:sanitizer_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_sanitizer_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base && echo '--flags IS_HWASAN=\"false\" USING_SANITIZER=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:sanitizer_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/sanitizer_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:synchronization_buildflags
cc_genrule {
    name: "cronet_aml_base_synchronization_buildflags",
    cmd: "mkdir -p $(genDir)/base/synchronization && echo '--flags ENABLE_MUTEX_PRIORITY_INHERITANCE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:synchronization_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/synchronization/synchronization_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:synchronization_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_synchronization_buildflags__testing",
    cmd: "mkdir -p $(genDir)/base/synchronization && echo '--flags ENABLE_MUTEX_PRIORITY_INHERITANCE=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:synchronization_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "base/synchronization/synchronization_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/test:base_unittests_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_base_test_base_unittests_jni_headers__action__testing",
    srcs: [
        "base/test/android/java/src/org/chromium/base/ContentUriTestUtils.java",
        "base/test/android/java/src/org/chromium/base/JavaHandlerThreadHelpers.java",
    ],
    cmd: "mkdir -p $(genDir)/base/test &&  " +
         "mkdir -p $(genDir)/jni_headers/base/test/base_unittests_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/test/base_unittests_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/test/base_unittests_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/test/base_unittests_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "ContentUriTestUtils_jni.h " +
         "--output-name " +
         "JavaHandlerThreadHelpers_jni.h " +
         "--input-file " +
         "$(location base/test/android/java/src/org/chromium/base/ContentUriTestUtils.java) " +
         "--input-file " +
         "$(location base/test/android/java/src/org/chromium/base/JavaHandlerThreadHelpers.java)",
    out: [
        "base/test/base_unittests_jni_headers.srcjar",
        "base/test/base_unittests_jni_headers/ContentUriTestUtils_jni.h",
        "base/test/base_unittests_jni_headers/JavaHandlerThreadHelpers_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/test:test_support__testing
cc_library_static {
    name: "cronet_aml_base_test_test_support__testing",
    srcs: [
        "base/task/sequence_manager/test/fake_task.cc",
        "base/task/sequence_manager/test/mock_time_domain.cc",
        "base/task/sequence_manager/test/mock_time_message_pump.cc",
        "base/task/sequence_manager/test/sequence_manager_for_test.cc",
        "base/test/android/java_handler_thread_helpers.cc",
        "base/test/android/url_utils.cc",
        "base/test/bind.cc",
        "base/test/copy_only_int.cc",
        "base/test/gtest_links.cc",
        "base/test/gtest_tags.cc",
        "base/test/gtest_util.cc",
        "base/test/gtest_xml_unittest_result_printer.cc",
        "base/test/gtest_xml_util.cc",
        "base/test/icu_test_util.cc",
        "base/test/launcher/test_launcher.cc",
        "base/test/launcher/test_launcher_test_utils.cc",
        "base/test/launcher/test_launcher_tracer.cc",
        "base/test/launcher/test_result.cc",
        "base/test/launcher/test_results_tracker.cc",
        "base/test/launcher/unit_test_launcher.cc",
        "base/test/metrics/histogram_enum_reader.cc",
        "base/test/metrics/histogram_tester.cc",
        "base/test/metrics/histogram_variants_reader.cc",
        "base/test/metrics/user_action_tester.cc",
        "base/test/mock_devices_changed_observer.cc",
        "base/test/mock_entropy_provider.cc",
        "base/test/mock_log.cc",
        "base/test/multiprocess_test.cc",
        "base/test/multiprocess_test_android.cc",
        "base/test/null_task_runner.cc",
        "base/test/perf_log.cc",
        "base/test/perf_test_suite.cc",
        "base/test/perf_time_logger.cc",
        "base/test/power_monitor_test.cc",
        "base/test/power_monitor_test_utils.cc",
        "base/test/protobuf_matchers.cc",
        "base/test/run_until.cc",
        "base/test/scoped_amount_of_physical_memory_override.cc",
        "base/test/scoped_block_tests_writing_to_special_dirs.cc",
        "base/test/scoped_command_line.cc",
        "base/test/scoped_feature_list.cc",
        "base/test/scoped_locale.cc",
        "base/test/scoped_mock_clock_override.cc",
        "base/test/scoped_mock_time_message_loop_task_runner.cc",
        "base/test/scoped_path_override.cc",
        "base/test/scoped_run_loop_timeout.cc",
        "base/test/sequenced_task_runner_test_template.cc",
        "base/test/simple_test_clock.cc",
        "base/test/simple_test_tick_clock.cc",
        "base/test/task_environment.cc",
        "base/test/task_runner_test_template.cc",
        "base/test/test_discardable_memory_allocator.cc",
        "base/test/test_file_util.cc",
        "base/test/test_file_util_android.cc",
        "base/test/test_file_util_linux.cc",
        "base/test/test_file_util_posix.cc",
        "base/test/test_io_thread.cc",
        "base/test/test_message_loop.cc",
        "base/test/test_mock_time_task_runner.cc",
        "base/test/test_pending_task.cc",
        "base/test/test_shared_memory_util.cc",
        "base/test/test_simple_task_runner.cc",
        "base/test/test_suite.cc",
        "base/test/test_support_android.cc",
        "base/test/test_waitable_event.cc",
        "base/test/thread_pool_test_helpers_android.cc",
        "base/test/thread_test_helper.cc",
        "base/test/values_test_util.cc",
        "base/test/with_feature_override.cc",
        "base/timer/mock_timer.cc",
    ],
    shared_libs: [
        "libandroid",
        "liblog",
        "libz",
    ],
    generated_headers: [
        "cronet_aml_base_allocator_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromecast_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromeos_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_debugging_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_partition_alloc_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr_buildflags__testing",
        "cronet_aml_base_anchor_functions_buildflags__testing",
        "cronet_aml_base_build_date__testing",
        "cronet_aml_base_cfi_buildflags__testing",
        "cronet_aml_base_check_version_internal_action__testing",
        "cronet_aml_base_clang_profiling_buildflags__testing",
        "cronet_aml_base_debugging_buildflags__testing",
        "cronet_aml_base_feature_list_buildflags__testing",
        "cronet_aml_base_fuzzing_buildflags__testing",
        "cronet_aml_base_ios_cronet_buildflags__testing",
        "cronet_aml_base_logging_buildflags__testing",
        "cronet_aml_base_message_pump_buildflags__testing",
        "cronet_aml_base_orderfile_buildflags__testing",
        "cronet_aml_base_power_monitor_buildflags__testing",
        "cronet_aml_base_profiler_buildflags__testing",
        "cronet_aml_base_protected_memory_buildflags__testing",
        "cronet_aml_base_rust_buildflags__testing",
        "cronet_aml_base_sanitizer_buildflags__testing",
        "cronet_aml_base_synchronization_buildflags__testing",
        "cronet_aml_base_test_base_unittests_jni_headers__action__testing",
        "cronet_aml_base_test_test_support_jni_headers__action__testing",
        "cronet_aml_base_tracing_buildflags__testing",
        "cronet_aml_build_blink_buildflags__testing",
        "cronet_aml_build_branding_buildflags__testing",
        "cronet_aml_build_chromecast_buildflags__testing",
        "cronet_aml_build_chromeos_buildflags__testing",
        "cronet_aml_build_config_compiler_compiler_buildflags__testing",
        "cronet_aml_build_ios_buildflags__testing",
    ],
    export_generated_headers: [
        "cronet_aml_base_allocator_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromecast_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromeos_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_debugging_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_partition_alloc_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr_buildflags__testing",
        "cronet_aml_base_anchor_functions_buildflags__testing",
        "cronet_aml_base_build_date__testing",
        "cronet_aml_base_cfi_buildflags__testing",
        "cronet_aml_base_check_version_internal_action__testing",
        "cronet_aml_base_clang_profiling_buildflags__testing",
        "cronet_aml_base_debugging_buildflags__testing",
        "cronet_aml_base_feature_list_buildflags__testing",
        "cronet_aml_base_fuzzing_buildflags__testing",
        "cronet_aml_base_ios_cronet_buildflags__testing",
        "cronet_aml_base_logging_buildflags__testing",
        "cronet_aml_base_message_pump_buildflags__testing",
        "cronet_aml_base_orderfile_buildflags__testing",
        "cronet_aml_base_power_monitor_buildflags__testing",
        "cronet_aml_base_profiler_buildflags__testing",
        "cronet_aml_base_protected_memory_buildflags__testing",
        "cronet_aml_base_rust_buildflags__testing",
        "cronet_aml_base_sanitizer_buildflags__testing",
        "cronet_aml_base_synchronization_buildflags__testing",
        "cronet_aml_base_test_base_unittests_jni_headers__action__testing",
        "cronet_aml_base_test_test_support_jni_headers__action__testing",
        "cronet_aml_base_tracing_buildflags__testing",
        "cronet_aml_build_blink_buildflags__testing",
        "cronet_aml_build_branding_buildflags__testing",
        "cronet_aml_build_chromecast_buildflags__testing",
        "cronet_aml_build_chromeos_buildflags__testing",
        "cronet_aml_build_config_compiler_compiler_buildflags__testing",
        "cronet_aml_build_ios_buildflags__testing",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r26b_1",
        "-DBENCHMARK_STATIC_DEFINE",
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DGTEST_API_=",
        "-DGTEST_HAS_ABSL",
        "-DGTEST_HAS_POSIX_RE=0",
        "-DGTEST_HAS_TR1_TUPLE=0",
        "-DGTEST_LANG_CXX11=1",
        "-DGTEST_NO_ABSL_FLAGS",
        "-DHAVE_SYS_UIO_H",
        "-DICU_UTIL_DATA_IMPL=ICU_UTIL_DATA_FILE",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-DUNIT_TEST",
        "-DUSE_CHROMIUM_ICU=1",
        "-DU_ENABLE_DYLOAD=0",
        "-DU_ENABLE_RESOURCE_TRACING=0",
        "-DU_ENABLE_TRACING=1",
        "-DU_STATIC_IMPLEMENTATION",
        "-DU_USING_ICU_NAMESPACE=0",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/base/allocator/partition_allocator/src/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/abseil-cpp/",
        "external/cronet/third_party/boringssl/src/include/",
        "external/cronet/third_party/ced/src/",
        "external/cronet/third_party/google_benchmark/src/include/",
        "external/cronet/third_party/googletest/custom/",
        "external/cronet/third_party/googletest/src/googlemock/include/",
        "external/cronet/third_party/googletest/src/googletest/include/",
        "external/cronet/third_party/icu/source/common/",
        "external/cronet/third_party/icu/source/i18n/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
        "external/cronet/third_party/libxml/linux/include/",
        "external/cronet/third_party/libxml/src/include/",
        "external/cronet/third_party/re2/src/",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
        "-Wl,--script,external/cronet/base/android/library_loader/anchor_functions.lds",
        "-Wl,-wrap,asprintf",
        "-Wl,-wrap,calloc",
        "-Wl,-wrap,free",
        "-Wl,-wrap,getcwd",
        "-Wl,-wrap,malloc",
        "-Wl,-wrap,malloc_usable_size",
        "-Wl,-wrap,memalign",
        "-Wl,-wrap,posix_memalign",
        "-Wl,-wrap,pvalloc",
        "-Wl,-wrap,realloc",
        "-Wl,-wrap,realpath",
        "-Wl,-wrap,strdup",
        "-Wl,-wrap,strndup",
        "-Wl,-wrap,valloc",
        "-Wl,-wrap,vasprintf",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
            ],
        },
        android_arm64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-O2",
                "-mno-outline",
            ],
        },
        android_x86: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
    },
}

// GN: //base/test:test_support_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_base_test_test_support_jni_headers__action__testing",
    srcs: [
        "base/test/android/java/src/org/chromium/base/MainReturnCodeResult.java",
        "base/test/android/java/src/org/chromium/base/MultiprocessTestClientLauncher.java",
        "base/test/android/javatests/src/org/chromium/base/test/task/ThreadPoolTestHelpers.java",
        "base/test/android/javatests/src/org/chromium/base/test/util/UrlUtils.java",
    ],
    cmd: "mkdir -p $(genDir)/base/test &&  " +
         "mkdir -p $(genDir)/jni_headers/base/test/test_support_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/base/test/test_support_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/base/test/test_support_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/base/test/test_support_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "MainReturnCodeResult_jni.h " +
         "--output-name " +
         "MultiprocessTestClientLauncher_jni.h " +
         "--output-name " +
         "ThreadPoolTestHelpers_jni.h " +
         "--output-name " +
         "UrlUtils_jni.h " +
         "--input-file " +
         "$(location base/test/android/java/src/org/chromium/base/MainReturnCodeResult.java) " +
         "--input-file " +
         "$(location base/test/android/java/src/org/chromium/base/MultiprocessTestClientLauncher.java) " +
         "--input-file " +
         "$(location base/test/android/javatests/src/org/chromium/base/test/task/ThreadPoolTestHelpers.java) " +
         "--input-file " +
         "$(location base/test/android/javatests/src/org/chromium/base/test/util/UrlUtils.java)",
    out: [
        "base/test/test_support_jni_headers.srcjar",
        "base/test/test_support_jni_headers/MainReturnCodeResult_jni.h",
        "base/test/test_support_jni_headers/MultiprocessTestClientLauncher_jni.h",
        "base/test/test_support_jni_headers/ThreadPoolTestHelpers_jni.h",
        "base/test/test_support_jni_headers/UrlUtils_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:tracing_buildflags
cc_genrule {
    name: "cronet_aml_base_tracing_buildflags",
    cmd: "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "base/tracing_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base:tracing_buildflags__testing
cc_genrule {
    name: "cronet_aml_base_tracing_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ $$CC_OS != 'android' ]]; " +
         "then " +
         "mkdir -p $(genDir)/base && echo '--flags ENABLE_BASE_TRACING=\"false\" USE_PERFETTO_CLIENT_LIBRARY=\"true\" USE_PERFETTO_TRACE_PROCESSOR=\"true\" OPTIONAL_TRACE_EVENTS_ENABLED=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//base:tracing_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    host_supported: true,
    out: [
        "base/tracing_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/version_info/android:channel_enum_srcjar__testing
java_genrule {
    name: "cronet_aml_base_version_info_android_channel_enum_srcjar__testing",
    cmd: "mkdir -p $(genDir)/base/version_info/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location base/version_info/channel.h)",
    out: [
        "base/version_info/android/channel_enum_srcjar.srcjar",
    ],
    tool_files: [
        "base/version_info/channel.h",
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //base/version_info/android:generate_version_constants__testing
java_genrule {
    name: "cronet_aml_base_version_info_android_generate_version_constants__testing",
    cmd: "mkdir -p $(genDir)/base/version_info/android/java/org/chromium/base/version_info && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-e " +
         "'CHANNEL=str.upper(\"default\")' " +
         "-o " +
         "$(out) " +
         "$(location base/version_info/android/java/VersionConstants.java.version)",
    out: [
        "base/version_info/android/java/org/chromium/base/version_info/VersionConstants.java",
    ],
    tool_files: [
        "base/version_info/android/java/VersionConstants.java.version",
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/android:build_config_gen
genrule {
    name: "cronet_aml_build_android_build_config_gen",
    srcs: [
        ":cronet_aml_build_android_build_config_gen_preprocess",
    ],
    tools: [
        "soong_zip",
    ],
    cmd: "cp $(in) $(genDir)/BuildConfig.java && " +
         "$(location soong_zip) -o $(out) -srcjar -C $(genDir) -f $(genDir)/BuildConfig.java",
    out: [
        "BuildConfig.srcjar",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/android:build_config_gen__testing
genrule {
    name: "cronet_aml_build_android_build_config_gen__testing",
    srcs: [
        ":cronet_aml_build_android_build_config_gen__testing_preprocess",
    ],
    tools: [
        "soong_zip",
    ],
    cmd: "cp $(in) $(genDir)/BuildConfig.java && " +
         "$(location soong_zip) -o $(out) -srcjar -C $(genDir) -f $(genDir)/BuildConfig.java",
    out: [
        "BuildConfig.srcjar",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/android:build_config_gen__testing
cc_preprocess_no_configuration {
    name: "cronet_aml_build_android_build_config_gen__testing_preprocess",
    srcs: [
        ":cronet_aml_build_android_build_config_gen__testing_rename",
    ],
    cflags: [
        "-DANDROID",
        "-E",
        "-P",
    ],
}

// GN: //build/android:build_config_gen__testing
genrule {
    name: "cronet_aml_build_android_build_config_gen__testing_rename",
    srcs: [
        "build/android/java/templates/BuildConfig.template",
    ],
    cmd: "cp $(in) $(out)",
    out: [
        "BuildConfig.cc",
    ],
}

// GN: //build/android:build_config_gen
cc_preprocess_no_configuration {
    name: "cronet_aml_build_android_build_config_gen_preprocess",
    srcs: [
        ":cronet_aml_build_android_build_config_gen_rename",
    ],
    cflags: [
        "-DANDROID",
        "-E",
        "-P",
    ],
}

// GN: //build/android:build_config_gen
genrule {
    name: "cronet_aml_build_android_build_config_gen_rename",
    srcs: [
        "build/android/java/templates/BuildConfig.template",
    ],
    cmd: "cp $(in) $(out)",
    out: [
        "BuildConfig.cc",
    ],
}

// GN: //build/android:native_libraries_gen
java_genrule {
    name: "cronet_aml_build_android_native_libraries_gen",
    cmd: "mkdir -p $(genDir)/build/android && $(location build/android/gyp/write_native_libraries_java.py) --output " +
         "$(out) " +
         "--cpu-family " +
         "CPU_FAMILY_ARM",
    out: [
        "build/android/native_libraries_gen.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/write_native_libraries_java.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/android:native_libraries_gen__testing
java_genrule {
    name: "cronet_aml_build_android_native_libraries_gen__testing",
    cmd: "mkdir -p $(genDir)/build/android && $(location build/android/gyp/write_native_libraries_java.py) --output " +
         "$(out) " +
         "--cpu-family " +
         "CPU_FAMILY_ARM",
    out: [
        "build/android/native_libraries_gen.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/write_native_libraries_java.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:blink_buildflags
cc_genrule {
    name: "cronet_aml_build_blink_buildflags",
    cmd: "mkdir -p $(genDir)/build && echo '--flags USE_BLINK=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:blink_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/blink_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:blink_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_blink_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build && echo '--flags USE_BLINK=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:blink_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "build/blink_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:branding_buildflags
cc_genrule {
    name: "cronet_aml_build_branding_buildflags",
    cmd: "mkdir -p $(genDir)/build && echo '--flags CHROMIUM_BRANDING=\"1\" GOOGLE_CHROME_BRANDING=\"0\" CHROME_FOR_TESTING=\"0\" GOOGLE_CHROME_FOR_TESTING_BRANDING=\"0\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:branding_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/branding_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:branding_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_branding_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build && echo '--flags CHROMIUM_BRANDING=\"1\" GOOGLE_CHROME_BRANDING=\"0\" CHROME_FOR_TESTING=\"0\" GOOGLE_CHROME_FOR_TESTING_BRANDING=\"0\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:branding_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "build/branding_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:chromecast_buildflags
cc_genrule {
    name: "cronet_aml_build_chromecast_buildflags",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_CASTOS=\"false\" IS_CAST_ANDROID=\"false\" ENABLE_CAST_RECEIVER=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:chromecast_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/chromecast_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:chromecast_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_chromecast_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_CASTOS=\"false\" IS_CAST_ANDROID=\"false\" ENABLE_CAST_RECEIVER=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:chromecast_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "build/chromecast_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:chromeos_buildflags
cc_genrule {
    name: "cronet_aml_build_chromeos_buildflags",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_CHROMEOS_DEVICE=\"false\" IS_CHROMEOS_LACROS=\"false\" IS_CHROMEOS_ASH=\"false\" IS_CHROMEOS_WITH_HW_DETAILS=\"false\" IS_REVEN=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:chromeos_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/chromeos_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:chromeos_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_chromeos_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_CHROMEOS_DEVICE=\"false\" IS_CHROMEOS_LACROS=\"false\" IS_CHROMEOS_ASH=\"false\" IS_CHROMEOS_WITH_HW_DETAILS=\"false\" IS_REVEN=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:chromeos_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "build/chromeos_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/config/compiler:compiler_buildflags
cc_genrule {
    name: "cronet_aml_build_config_compiler_compiler_buildflags",
    cmd: "mkdir -p $(genDir)/build/config/compiler && echo '--flags CLANG_PGO=\"0\" SYMBOL_LEVEL=\"1\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build/config/compiler:compiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/config/compiler/compiler_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/config/compiler:compiler_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_config_compiler_compiler_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build/config/compiler && echo '--flags CLANG_PGO=\"0\" SYMBOL_LEVEL=\"1\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build/config/compiler:compiler_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "build/config/compiler/compiler_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:ios_buildflags
cc_genrule {
    name: "cronet_aml_build_ios_buildflags",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_IOS_APP_EXTENSION=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:ios_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/ios_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:ios_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_ios_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_IOS_APP_EXTENSION=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:ios_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "build/ios_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:robolectric_buildflags
cc_genrule {
    name: "cronet_aml_build_robolectric_buildflags",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_ROBOLECTRIC=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:robolectric_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/robolectric_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build:robolectric_buildflags__testing
cc_genrule {
    name: "cronet_aml_build_robolectric_buildflags__testing",
    cmd: "mkdir -p $(genDir)/build && echo '--flags IS_ROBOLECTRIC=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//build:robolectric_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "build/robolectric_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/rust:cxx_cppdeps
cc_library_static {
    name: "cronet_aml_build_rust_cxx_cppdeps",
    srcs: [
        "third_party/rust/chromium_crates_io/vendor/cxx-1.0.120/src/cxx.cc",
    ],
    static_libs: [
        "libcxx_cronet_aml_third_party_rust_cxx_v1_lib__FFI",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r26b_1",
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DCXX_RS_EXPORT=",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-DRUST_CXX_NO_EXCEPTIONS",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
            ],
        },
        android_arm64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-O2",
                "-mno-outline",
            ],
        },
        android_x86: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
    },
}

// GN: //build/rust:cxx_cppdeps__testing
cc_library_static {
    name: "cronet_aml_build_rust_cxx_cppdeps__testing",
    srcs: [
        "third_party/rust/chromium_crates_io/vendor/cxx-1.0.120/src/cxx.cc",
    ],
    static_libs: [
        "libcxx_cronet_aml_third_party_rust_cxx_v1_lib__testing__FFI",
    ],
    host_supported: true,
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DCXX_RS_EXPORT=",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-DRUST_CXX_NO_EXCEPTIONS",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_arm64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-O2",
                "-mno-outline",
            ],
        },
        android_riscv64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_x86: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        host: {
            cflags: [
                "-DCR_SYSROOT_KEY=20230611T210420Z-2",
                "-DUSE_AURA=1",
                "-DUSE_OZONE=1",
                "-DUSE_UDEV",
                "-D_FILE_OFFSET_BITS=64",
                "-D_FORTIFY_SOURCE=2",
                "-D_LARGEFILE64_SOURCE",
                "-D_LARGEFILE_SOURCE",
                "-O2",
                "-msse3",
            ],
            compile_multilib: "64",
        },
    },
}

// GN: //build/rust/tests/test_rust_static_library:test_rust_static_library_cxx_generated_gen__testing
cc_genrule {
    name: "cronet_aml_build_rust_tests_test_rust_static_library_test_rust_static_library_cxx_generated_gen__testing",
    srcs: [
        "build/rust/tests/test_rust_static_library/src/lib.rs",
    ],
    tools: [
        "cxxbridge",
    ],
    cmd: "$(location cxxbridge) $(in) > $(out)",
    out: [
        "build/rust/tests/test_rust_static_library/src/lib.rs.cc",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //build/rust/tests/test_rust_static_library:test_rust_static_library_cxx_generated_gen__testing
cc_genrule {
    name: "cronet_aml_build_rust_tests_test_rust_static_library_test_rust_static_library_cxx_generated_gen__testing_header",
    srcs: [
        "build/rust/tests/test_rust_static_library/src/lib.rs",
    ],
    tools: [
        "cxxbridge",
    ],
    cmd: "$(location cxxbridge) $(in) --header > $(out)",
    out: [
        "build/rust/tests/test_rust_static_library/src/lib.rs.h",
    ],
}

// GN: //buildtools/third_party/libc++abi:libc++abi
cc_library_static {
    name: "cronet_aml_buildtools_third_party_libc__abi_libc__abi",
    srcs: [
        "third_party/libc++abi/src/src/abort_message.cpp",
        "third_party/libc++abi/src/src/cxa_aux_runtime.cpp",
        "third_party/libc++abi/src/src/cxa_default_handlers.cpp",
        "third_party/libc++abi/src/src/cxa_exception.cpp",
        "third_party/libc++abi/src/src/cxa_exception_storage.cpp",
        "third_party/libc++abi/src/src/cxa_guard.cpp",
        "third_party/libc++abi/src/src/cxa_handlers.cpp",
        "third_party/libc++abi/src/src/cxa_personality.cpp",
        "third_party/libc++abi/src/src/cxa_thread_atexit.cpp",
        "third_party/libc++abi/src/src/cxa_vector.cpp",
        "third_party/libc++abi/src/src/cxa_virtual.cpp",
        "third_party/libc++abi/src/src/fallback_malloc.cpp",
        "third_party/libc++abi/src/src/private_typeinfo.cpp",
        "third_party/libc++abi/src/src/stdlib_exception.cpp",
        "third_party/libc++abi/src/src/stdlib_stdexcept.cpp",
        "third_party/libc++abi/src/src/stdlib_typeinfo.cpp",
    ],
    host_supported: true,
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DLIBCXXABI_SILENT_TERMINATE",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_BUILDING_LIBRARY",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++/src/src/",
        "external/cronet/third_party/libc++abi/src/include",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
    ],
    cppflags: [
        "-fexceptions",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    rtti: true,
    target: {
        android_arm: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_arm64: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-O2",
                "-mno-outline",
            ],
        },
        android_riscv64: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-DHAVE___CXA_THREAD_ATEXIT_IMPL",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_x86: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        android_x86_64: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        host: {
            srcs: [
                "third_party/libc++abi/src/src/cxa_demangle.cpp",
            ],
            cflags: [
                "-DCR_SYSROOT_KEY=20230611T210420Z-2",
                "-DUSE_AURA=1",
                "-DUSE_OZONE=1",
                "-DUSE_UDEV",
                "-D_FILE_OFFSET_BITS=64",
                "-D_LARGEFILE64_SOURCE",
                "-D_LARGEFILE_SOURCE",
                "-O2",
                "-msse3",
            ],
            compile_multilib: "64",
        },
    },
}

// GN: //buildtools/third_party/libc++abi:libc++abi__testing
cc_library_static {
    name: "cronet_aml_buildtools_third_party_libc__abi_libc__abi__testing",
    srcs: [
        "third_party/libc++abi/src/src/abort_message.cpp",
        "third_party/libc++abi/src/src/cxa_aux_runtime.cpp",
        "third_party/libc++abi/src/src/cxa_default_handlers.cpp",
        "third_party/libc++abi/src/src/cxa_exception.cpp",
        "third_party/libc++abi/src/src/cxa_exception_storage.cpp",
        "third_party/libc++abi/src/src/cxa_guard.cpp",
        "third_party/libc++abi/src/src/cxa_handlers.cpp",
        "third_party/libc++abi/src/src/cxa_personality.cpp",
        "third_party/libc++abi/src/src/cxa_thread_atexit.cpp",
        "third_party/libc++abi/src/src/cxa_vector.cpp",
        "third_party/libc++abi/src/src/cxa_virtual.cpp",
        "third_party/libc++abi/src/src/fallback_malloc.cpp",
        "third_party/libc++abi/src/src/private_typeinfo.cpp",
        "third_party/libc++abi/src/src/stdlib_exception.cpp",
        "third_party/libc++abi/src/src/stdlib_stdexcept.cpp",
        "third_party/libc++abi/src/src/stdlib_typeinfo.cpp",
    ],
    host_supported: true,
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DLIBCXXABI_SILENT_TERMINATE",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_BUILDING_LIBRARY",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++/src/src/",
        "external/cronet/third_party/libc++abi/src/include",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
    ],
    cppflags: [
        "-fexceptions",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    rtti: true,
    target: {
        android_arm: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_arm64: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-O2",
                "-mno-outline",
            ],
        },
        android_riscv64: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-DHAVE___CXA_THREAD_ATEXIT_IMPL",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_x86: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        android_x86_64: {
            srcs: [
                "buildtools/third_party/libc++abi/cxa_demangle_stub.cc",
            ],
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        host: {
            srcs: [
                "third_party/libc++abi/src/src/cxa_demangle.cpp",
            ],
            cflags: [
                "-DCR_SYSROOT_KEY=20230611T210420Z-2",
                "-DUSE_AURA=1",
                "-DUSE_OZONE=1",
                "-DUSE_UDEV",
                "-D_FILE_OFFSET_BITS=64",
                "-D_LARGEFILE64_SOURCE",
                "-D_LARGEFILE_SOURCE",
                "-O2",
                "-msse3",
            ],
            compile_multilib: "64",
        },
    },
}

// GN: //gn:default_deps
cc_defaults {
    name: "cronet_aml_cc_defaults",
    cflags: [
        "-DBORINGSSL_SHARED_LIBRARY",
        "-DGOOGLE_PROTOBUF_NO_RTTI",
        "-Wno-ambiguous-reversed-operator",
        "-Wno-c++11-narrowing",
        "-Wno-error=return-type",
        "-Wno-invalid-constexpr",
        "-Wno-macro-redefined",
        "-Wno-missing-field-initializers",
        "-Wno-non-virtual-dtor",
        "-Wno-null-pointer-subtraction",
        "-Wno-sign-compare",
        "-Wno-sign-promo",
        "-Wno-unreachable-code-loop-increment",
        "-Wno-unused-parameter",
        "-fPIC",
        "-fprofile-list=external/cronet/exclude_coverage.list",
    ],
    stl: "none",
    cpp_std: "c++17",
    apex_available: [
        "com.android.tethering",
    ],
    min_sdk_version: "29",
    c_std: "gnu11",
    include_build_directory: false,
    target: {
        android: {
            shared_libs: [
                "libmediandk",
            ],
            header_libs: [
                "jni_headers",
            ],
        },
        host: {
            cflags: [
                "-UANDROID",
            ],
            compile_multilib: "64",
        },
    },
}

// GN: //components/cronet/android:api_version
java_genrule {
    name: "cronet_aml_components_cronet_android_api_version",
    cmd: "mkdir -p $(genDir)/components/cronet/android/templates/org/chromium/net && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-f " +
         "$(location build/util/LASTCHANGE) " +
         "-e " +
         "'API_LEVEL=31' " +
         "-o " +
         "$(out) " +
         "$(location components/cronet/android/api/src/org/chromium/net/ApiVersion.template)",
    out: [
        "components/cronet/android/templates/org/chromium/net/ApiVersion.java",
    ],
    tool_files: [
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
        "components/cronet/android/api/src/org/chromium/net/ApiVersion.template",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:api_version__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_api_version__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android/templates/org/chromium/net && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-f " +
         "$(location build/util/LASTCHANGE) " +
         "-e " +
         "'API_LEVEL=31' " +
         "-o " +
         "$(out) " +
         "$(location components/cronet/android/api/src/org/chromium/net/ApiVersion.template)",
    out: [
        "components/cronet/android/templates/org/chromium/net/ApiVersion.java",
    ],
    tool_files: [
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
        "components/cronet/android/api/src/org/chromium/net/ApiVersion.template",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:base_feature_overrides_java_proto__protoc_java
java_genrule {
    name: "cronet_aml_components_cronet_android_base_feature_overrides_java_proto__protoc_java",
    srcs: [
        "components/cronet/android/proto/base_feature_overrides.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/protoc_java.py) --protoc " +
         "$(location cronet_aml_third_party_protobuf_protoc) " +
         "--proto-path " +
         "external/cronet/components/cronet/android " +
         "--srcjar " +
         "$(out) " +
         "$(location components/cronet/android/proto/base_feature_overrides.proto)",
    out: [
        "components/cronet/android/base_feature_overrides_java_proto__protoc_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/gn_helpers.py",
        "build/protoc_java.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:base_feature_overrides_java_proto__protoc_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_base_feature_overrides_java_proto__protoc_java__testing",
    srcs: [
        "components/cronet/android/proto/base_feature_overrides.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/protoc_java.py) --protoc " +
         "$(location cronet_aml_third_party_protobuf_protoc) " +
         "--proto-path " +
         "external/cronet/components/cronet/android " +
         "--srcjar " +
         "$(out) " +
         "$(location components/cronet/android/proto/base_feature_overrides.proto)",
    out: [
        "components/cronet/android/base_feature_overrides_java_proto__protoc_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/gn_helpers.py",
        "build/protoc_java.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_headers__action
cc_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_headers__action",
    srcs: [
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetBidirectionalStream_jni.h " +
         "--output-name " +
         "CronetLibraryLoader_jni.h " +
         "--output-name " +
         "CronetUploadDataStream_jni.h " +
         "--output-name " +
         "CronetUrlRequest_jni.h " +
         "--output-name " +
         "CronetUrlRequestContext_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "components/cronet/android/cronet_jni_headers.srcjar",
        "components/cronet/android/cronet_jni_headers/CronetBidirectionalStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetLibraryLoader_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUploadDataStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequestContext_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_headers__action
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_headers__action__java",
    srcs: [
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetBidirectionalStream_jni.h " +
         "--output-name " +
         "CronetLibraryLoader_jni.h " +
         "--output-name " +
         "CronetUploadDataStream_jni.h " +
         "--output-name " +
         "CronetUrlRequest_jni.h " +
         "--output-name " +
         "CronetUrlRequestContext_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "components/cronet/android/cronet_jni_headers.srcjar",
        "components/cronet/android/cronet_jni_headers/CronetBidirectionalStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetLibraryLoader_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUploadDataStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequestContext_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_headers__action__testing",
    srcs: [
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetBidirectionalStream_jni.h " +
         "--output-name " +
         "CronetLibraryLoader_jni.h " +
         "--output-name " +
         "CronetUploadDataStream_jni.h " +
         "--output-name " +
         "CronetUrlRequest_jni.h " +
         "--output-name " +
         "CronetUrlRequestContext_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java)",
    out: [
        "components/cronet/android/cronet_jni_headers.srcjar",
        "components/cronet/android/cronet_jni_headers/CronetBidirectionalStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetLibraryLoader_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUploadDataStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequestContext_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_headers__action__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_headers__action__testing__java",
    srcs: [
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetBidirectionalStream_jni.h " +
         "--output-name " +
         "CronetLibraryLoader_jni.h " +
         "--output-name " +
         "CronetUploadDataStream_jni.h " +
         "--output-name " +
         "CronetUrlRequest_jni.h " +
         "--output-name " +
         "CronetUrlRequestContext_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java) " +
         "--input-file " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java)",
    out: [
        "components/cronet/android/cronet_jni_headers.srcjar",
        "components/cronet/android/cronet_jni_headers/CronetBidirectionalStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetLibraryLoader_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUploadDataStream_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequestContext_jni.h",
        "components/cronet/android/cronet_jni_headers/CronetUrlRequest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_registration
cc_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_registration",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android && current_dir=`basename \\`pwd\\``; " +
         "for f in $(in); " +
         "do " +
         "echo \"../$$current_dir/$$f\" >> $(genDir)/java.sources; " +
         "done; " +
         "python3 $(location third_party/jni_zero/jni_zero.py) generate-final " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration.srcjar " +
         "--java-sources-file " +
         "$(genDir)/java.sources " +
         "--include-test-only " +
         "--use-proxy-hash " +
         "--manual-jni-registration " +
         "--header-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration_generated.h " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "components/cronet/android/cronet_jni_registration.srcjar",
        "components/cronet/android/cronet_jni_registration_generated.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_registration
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_registration__java",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android && current_dir=`basename \\`pwd\\``; " +
         "for f in $(in); " +
         "do " +
         "echo \"../$$current_dir/$$f\" >> $(genDir)/java.sources; " +
         "done; " +
         "python3 $(location third_party/jni_zero/jni_zero.py) generate-final " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration.srcjar " +
         "--java-sources-file " +
         "$(genDir)/java.sources " +
         "--include-test-only " +
         "--use-proxy-hash " +
         "--manual-jni-registration " +
         "--header-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration_generated.h " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "components/cronet/android/cronet_jni_registration.srcjar",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_registration__testing
cc_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_registration__testing",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android && current_dir=`basename \\`pwd\\``; " +
         "for f in $(in); " +
         "do " +
         "echo \"../$$current_dir/$$f\" >> $(genDir)/java.sources; " +
         "done; " +
         "python3 $(location third_party/jni_zero/jni_zero.py) generate-final " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration.srcjar " +
         "--java-sources-file " +
         "$(genDir)/java.sources " +
         "--include-test-only " +
         "--use-proxy-hash " +
         "--manual-jni-registration " +
         "--header-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration_generated.h",
    out: [
        "components/cronet/android/cronet_jni_registration.srcjar",
        "components/cronet/android/cronet_jni_registration_generated.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_jni_registration__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_jni_registration__testing__java",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/process_launcher/ChildProcessService.java",
        "base/android/java/src/org/chromium/base/shared_preferences/SharedPreferencesManager.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
        "base/test/android/java/src/org/chromium/base/ContentUriTestUtils.java",
        "base/test/android/java/src/org/chromium/base/JavaHandlerThreadHelpers.java",
        "base/test/android/java/src/org/chromium/base/MainReturnCodeResult.java",
        "base/test/android/java/src/org/chromium/base/MultiprocessTestClientLauncher.java",
        "base/test/android/javatests/src/org/chromium/base/test/task/ThreadPoolTestHelpers.java",
        "base/test/android/javatests/src/org/chromium/base/test/util/UrlUtils.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/ExperimentalOptionsTest.java",
        "components/cronet/android/test/src/org/chromium/net/CronetTestUtil.java",
        "components/cronet/android/test/src/org/chromium/net/MockCertVerifier.java",
        "components/cronet/android/test/src/org/chromium/net/MockUrlRequestJobFactory.java",
        "components/cronet/android/test/src/org/chromium/net/NativeTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/QuicTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/TestUploadDataStreamHandler.java",
        "components/prefs/android/java/src/org/chromium/components/prefs/PrefService.java",
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
        "net/android/javatests/src/org/chromium/net/AndroidKeyStoreTestUtil.java",
        "net/android/javatests/src/org/chromium/net/AndroidProxyConfigServiceTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java",
        "testing/android/native_test/java/src/org/chromium/native_test/MainRunner.java",
        "testing/android/native_test/java/src/org/chromium/native_test/NativeTest.java",
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android && current_dir=`basename \\`pwd\\``; " +
         "for f in $(in); " +
         "do " +
         "echo \"../$$current_dir/$$f\" >> $(genDir)/java.sources; " +
         "done; " +
         "python3 $(location third_party/jni_zero/jni_zero.py) generate-final " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration.srcjar " +
         "--java-sources-file " +
         "$(genDir)/java.sources " +
         "--include-test-only " +
         "--use-proxy-hash " +
         "--manual-jni-registration " +
         "--header-path " +
         "$(genDir)/components/cronet/android/cronet_jni_registration_generated.h",
    out: [
        "components/cronet/android/cronet_jni_registration.srcjar",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_test_apk_jni__action__testing
cc_genrule {
    name: "cronet_aml_components_cronet_android_cronet_test_apk_jni__action__testing",
    srcs: [
        "components/cronet/android/test/src/org/chromium/net/CronetTestUtil.java",
        "components/cronet/android/test/src/org/chromium/net/MockCertVerifier.java",
        "components/cronet/android/test/src/org/chromium/net/MockUrlRequestJobFactory.java",
        "components/cronet/android/test/src/org/chromium/net/NativeTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/QuicTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/TestUploadDataStreamHandler.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_test_apk_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_test_apk_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_test_apk_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_test_apk_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetTestUtil_jni.h " +
         "--output-name " +
         "MockCertVerifier_jni.h " +
         "--output-name " +
         "MockUrlRequestJobFactory_jni.h " +
         "--output-name " +
         "NativeTestServer_jni.h " +
         "--output-name " +
         "QuicTestServer_jni.h " +
         "--output-name " +
         "TestUploadDataStreamHandler_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/CronetTestUtil.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/MockCertVerifier.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/MockUrlRequestJobFactory.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/NativeTestServer.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/QuicTestServer.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/TestUploadDataStreamHandler.java)",
    out: [
        "components/cronet/android/cronet_test_apk_jni.srcjar",
        "components/cronet/android/cronet_test_apk_jni/CronetTestUtil_jni.h",
        "components/cronet/android/cronet_test_apk_jni/MockCertVerifier_jni.h",
        "components/cronet/android/cronet_test_apk_jni/MockUrlRequestJobFactory_jni.h",
        "components/cronet/android/cronet_test_apk_jni/NativeTestServer_jni.h",
        "components/cronet/android/cronet_test_apk_jni/QuicTestServer_jni.h",
        "components/cronet/android/cronet_test_apk_jni/TestUploadDataStreamHandler_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_test_apk_jni__action__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_test_apk_jni__action__testing__java",
    srcs: [
        "components/cronet/android/test/src/org/chromium/net/CronetTestUtil.java",
        "components/cronet/android/test/src/org/chromium/net/MockCertVerifier.java",
        "components/cronet/android/test/src/org/chromium/net/MockUrlRequestJobFactory.java",
        "components/cronet/android/test/src/org/chromium/net/NativeTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/QuicTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/TestUploadDataStreamHandler.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_test_apk_jni && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_test_apk_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_test_apk_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_test_apk_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetTestUtil_jni.h " +
         "--output-name " +
         "MockCertVerifier_jni.h " +
         "--output-name " +
         "MockUrlRequestJobFactory_jni.h " +
         "--output-name " +
         "NativeTestServer_jni.h " +
         "--output-name " +
         "QuicTestServer_jni.h " +
         "--output-name " +
         "TestUploadDataStreamHandler_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/CronetTestUtil.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/MockCertVerifier.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/MockUrlRequestJobFactory.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/NativeTestServer.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/QuicTestServer.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/src/org/chromium/net/TestUploadDataStreamHandler.java)",
    out: [
        "components/cronet/android/cronet_test_apk_jni.srcjar",
        "components/cronet/android/cronet_test_apk_jni/CronetTestUtil_jni.h",
        "components/cronet/android/cronet_test_apk_jni/MockCertVerifier_jni.h",
        "components/cronet/android/cronet_test_apk_jni/MockUrlRequestJobFactory_jni.h",
        "components/cronet/android/cronet_test_apk_jni/NativeTestServer_jni.h",
        "components/cronet/android/cronet_test_apk_jni/QuicTestServer_jni.h",
        "components/cronet/android/cronet_test_apk_jni/TestUploadDataStreamHandler_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_tests_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_components_cronet_android_cronet_tests_jni_headers__action__testing",
    srcs: [
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/ExperimentalOptionsTest.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_tests_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetUrlRequestContextTest_jni.h " +
         "--output-name " +
         "CronetUrlRequestTest_jni.h " +
         "--output-name " +
         "ExperimentalOptionsTest_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestTest.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/javatests/src/org/chromium/net/ExperimentalOptionsTest.java)",
    out: [
        "components/cronet/android/cronet_tests_jni_headers.srcjar",
        "components/cronet/android/cronet_tests_jni_headers/CronetUrlRequestContextTest_jni.h",
        "components/cronet/android/cronet_tests_jni_headers/CronetUrlRequestTest_jni.h",
        "components/cronet/android/cronet_tests_jni_headers/ExperimentalOptionsTest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_tests_jni_headers__action__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_tests_jni_headers__action__testing__java",
    srcs: [
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/ExperimentalOptionsTest.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android/cronet_tests_jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "CronetUrlRequestContextTest_jni.h " +
         "--output-name " +
         "CronetUrlRequestTest_jni.h " +
         "--output-name " +
         "ExperimentalOptionsTest_jni.h " +
         "--input-file " +
         "$(location components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestTest.java) " +
         "--input-file " +
         "$(location components/cronet/android/test/javatests/src/org/chromium/net/ExperimentalOptionsTest.java)",
    out: [
        "components/cronet/android/cronet_tests_jni_headers.srcjar",
        "components/cronet/android/cronet_tests_jni_headers/CronetUrlRequestContextTest_jni.h",
        "components/cronet/android/cronet_tests_jni_headers/CronetUrlRequestTest_jni.h",
        "components/cronet/android/cronet_tests_jni_headers/ExperimentalOptionsTest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_tests_jni_registration__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_cronet_tests_jni_registration__testing__java",
    srcs: [
        "base/android/java/src/org/chromium/base/ApkAssets.java",
        "base/android/java/src/org/chromium/base/ApplicationStatus.java",
        "base/android/java/src/org/chromium/base/BuildInfo.java",
        "base/android/java/src/org/chromium/base/BundleUtils.java",
        "base/android/java/src/org/chromium/base/Callback.java",
        "base/android/java/src/org/chromium/base/CommandLine.java",
        "base/android/java/src/org/chromium/base/ContentUriUtils.java",
        "base/android/java/src/org/chromium/base/CpuFeatures.java",
        "base/android/java/src/org/chromium/base/EarlyTraceEvent.java",
        "base/android/java/src/org/chromium/base/EventLog.java",
        "base/android/java/src/org/chromium/base/FeatureList.java",
        "base/android/java/src/org/chromium/base/FeatureMap.java",
        "base/android/java/src/org/chromium/base/Features.java",
        "base/android/java/src/org/chromium/base/FieldTrialList.java",
        "base/android/java/src/org/chromium/base/FileUtils.java",
        "base/android/java/src/org/chromium/base/ImportantFileWriterAndroid.java",
        "base/android/java/src/org/chromium/base/InputHintChecker.java",
        "base/android/java/src/org/chromium/base/IntStringCallback.java",
        "base/android/java/src/org/chromium/base/JNIUtils.java",
        "base/android/java/src/org/chromium/base/JavaExceptionReporter.java",
        "base/android/java/src/org/chromium/base/JavaHandlerThread.java",
        "base/android/java/src/org/chromium/base/JniAndroid.java",
        "base/android/java/src/org/chromium/base/LocaleUtils.java",
        "base/android/java/src/org/chromium/base/MemoryPressureListener.java",
        "base/android/java/src/org/chromium/base/PathService.java",
        "base/android/java/src/org/chromium/base/PathUtils.java",
        "base/android/java/src/org/chromium/base/PowerMonitor.java",
        "base/android/java/src/org/chromium/base/RadioUtils.java",
        "base/android/java/src/org/chromium/base/SysUtils.java",
        "base/android/java/src/org/chromium/base/ThreadUtils.java",
        "base/android/java/src/org/chromium/base/TimezoneUtils.java",
        "base/android/java/src/org/chromium/base/Token.java",
        "base/android/java/src/org/chromium/base/TraceEvent.java",
        "base/android/java/src/org/chromium/base/UnguessableToken.java",
        "base/android/java/src/org/chromium/base/jank_tracker/JankMetricUMARecorder.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java",
        "base/android/java/src/org/chromium/base/library_loader/LibraryPrefetcher.java",
        "base/android/java/src/org/chromium/base/memory/JavaHeapDumpGenerator.java",
        "base/android/java/src/org/chromium/base/memory/MemoryInfoBridge.java",
        "base/android/java/src/org/chromium/base/memory/MemoryPurgeManager.java",
        "base/android/java/src/org/chromium/base/metrics/NativeUmaRecorder.java",
        "base/android/java/src/org/chromium/base/metrics/StatisticsRecorderAndroid.java",
        "base/android/java/src/org/chromium/base/process_launcher/ChildProcessService.java",
        "base/android/java/src/org/chromium/base/shared_preferences/SharedPreferencesManager.java",
        "base/android/java/src/org/chromium/base/task/PostTask.java",
        "base/android/java/src/org/chromium/base/task/TaskRunnerImpl.java",
        "base/test/android/java/src/org/chromium/base/ContentUriTestUtils.java",
        "base/test/android/java/src/org/chromium/base/JavaHandlerThreadHelpers.java",
        "base/test/android/java/src/org/chromium/base/MainReturnCodeResult.java",
        "base/test/android/java/src/org/chromium/base/MultiprocessTestClientLauncher.java",
        "base/test/android/javatests/src/org/chromium/base/test/task/ThreadPoolTestHelpers.java",
        "base/test/android/javatests/src/org/chromium/base/test/util/UrlUtils.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetBidirectionalStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUploadDataStream.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequest.java",
        "components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestTest.java",
        "components/cronet/android/test/javatests/src/org/chromium/net/ExperimentalOptionsTest.java",
        "components/cronet/android/test/src/org/chromium/net/CronetTestUtil.java",
        "components/cronet/android/test/src/org/chromium/net/MockCertVerifier.java",
        "components/cronet/android/test/src/org/chromium/net/MockUrlRequestJobFactory.java",
        "components/cronet/android/test/src/org/chromium/net/NativeTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/QuicTestServer.java",
        "components/cronet/android/test/src/org/chromium/net/TestUploadDataStreamHandler.java",
        "components/prefs/android/java/src/org/chromium/components/prefs/PrefService.java",
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
        "net/android/javatests/src/org/chromium/net/AndroidKeyStoreTestUtil.java",
        "net/android/javatests/src/org/chromium/net/AndroidProxyConfigServiceTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java",
        "testing/android/native_test/java/src/org/chromium/native_test/MainRunner.java",
        "testing/android/native_test/java/src/org/chromium/native_test/NativeTest.java",
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/cronet/android && current_dir=`basename \\`pwd\\``; " +
         "for f in $(in); " +
         "do " +
         "echo \"../$$current_dir/$$f\" >> $(genDir)/java.sources; " +
         "done; " +
         "python3 $(location third_party/jni_zero/jni_zero.py) generate-final " +
         "--srcjar-path " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_registration.srcjar " +
         "--java-sources-file " +
         "$(genDir)/java.sources " +
         "--include-test-only " +
         "--use-proxy-hash " +
         "--manual-jni-registration " +
         "--header-path " +
         "$(genDir)/components/cronet/android/cronet_tests_jni_registration_generated.h " +
         "--module-name " +
         "cronet_tests",
    out: [
        "components/cronet/android/cronet_tests_jni_registration.srcjar",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:cronet_unittests_android__library__testing
cc_library_shared {
    name: "cronet_aml_components_cronet_android_cronet_unittests_android__library__testing",
    srcs: [
        "components/cronet/run_all_unittests.cc",
    ],
    shared_libs: [
        "libandroid",
        "liblog",
        "libz",
    ],
    whole_static_libs: [
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_allocator_base__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_allocator_core__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_allocator_shim__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr__testing",
        "cronet_aml_base_base__testing",
        "cronet_aml_base_base_static__testing",
        "cronet_aml_base_check_version_internal__testing",
        "cronet_aml_base_i18n__testing",
        "cronet_aml_base_nodebug_assertion__testing",
        "cronet_aml_base_test_proto_test_support__testing",
        "cronet_aml_base_test_test_config__testing",
        "cronet_aml_base_test_test_support__testing",
        "cronet_aml_base_third_party_cityhash_cityhash__testing",
        "cronet_aml_base_third_party_cityhash_v103_cityhash_v103__testing",
        "cronet_aml_base_third_party_double_conversion_double_conversion__testing",
        "cronet_aml_base_third_party_superfasthash_superfasthash__testing",
        "cronet_aml_build_rust_cxx_cppdeps__testing",
        "cronet_aml_buildtools_third_party_libc___libc____testing",
        "cronet_aml_buildtools_third_party_libc__abi_libc__abi__testing",
        "cronet_aml_components_cronet_android_base_feature_overrides_proto__testing",
        "cronet_aml_components_cronet_android_cronet_base_feature__testing",
        "cronet_aml_components_cronet_android_cronet_base_feature_unittest__testing",
        "cronet_aml_components_cronet_android_cronet_static__testing",
        "cronet_aml_components_cronet_android_request_context_config_proto__testing",
        "cronet_aml_components_cronet_cronet_common__testing",
        "cronet_aml_components_cronet_cronet_common_unittests__testing",
        "cronet_aml_components_cronet_cronet_version_header__testing",
        "cronet_aml_components_cronet_metrics_util__testing",
        "cronet_aml_components_metrics_library_support__testing",
        "cronet_aml_components_miracle_parameter_common_common__testing",
        "cronet_aml_components_prefs_prefs__testing",
        "cronet_aml_components_prefs_test_support__testing",
        "cronet_aml_crypto_crypto__testing",
        "cronet_aml_net_constants__testing",
        "cronet_aml_net_dns_dns__testing",
        "cronet_aml_net_dns_dns_client__testing",
        "cronet_aml_net_dns_host_resolver__testing",
        "cronet_aml_net_dns_host_resolver_manager__testing",
        "cronet_aml_net_dns_mdns_client__testing",
        "cronet_aml_net_dns_public_public__testing",
        "cronet_aml_net_dns_test_support__testing",
        "cronet_aml_net_gtest_util__testing",
        "cronet_aml_net_http_transport_security_state_generated_files__testing",
        "cronet_aml_net_isolation_info_proto__testing",
        "cronet_aml_net_net__testing",
        "cronet_aml_net_net_deps__testing",
        "cronet_aml_net_net_nqe_proto__testing",
        "cronet_aml_net_net_public_deps__testing",
        "cronet_aml_net_preload_decoder__testing",
        "cronet_aml_net_quic_test_flags_utils__testing",
        "cronet_aml_net_simple_quic_tools__testing",
        "cronet_aml_net_test_support__testing",
        "cronet_aml_net_third_party_quiche_net_quic_proto__testing",
        "cronet_aml_net_third_party_quiche_net_quic_test_tools_proto__testing",
        "cronet_aml_net_third_party_quiche_quiche__testing",
        "cronet_aml_net_third_party_quiche_quiche_tool_support__testing",
        "cronet_aml_net_third_party_uri_template_uri_template__testing",
        "cronet_aml_net_tools_tld_cleanup_tld_cleanup__testing",
        "cronet_aml_net_traffic_annotation_test_support__testing",
        "cronet_aml_net_traffic_annotation_traffic_annotation__testing",
        "cronet_aml_testing_android_native_test_native_test_native_code__testing",
        "cronet_aml_testing_android_native_test_native_test_support__testing",
        "cronet_aml_testing_gmock_gmock__testing",
        "cronet_aml_testing_gtest_gtest__testing",
        "cronet_aml_third_party_abseil_cpp_absl__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_base__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_log_severity__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_malloc_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_raw_logging_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_spinlock_wait__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_strerror__testing",
        "cronet_aml_third_party_abseil_cpp_absl_base_throw_delegate__testing",
        "cronet_aml_third_party_abseil_cpp_absl_container_hashtablez_sampler__testing",
        "cronet_aml_third_party_abseil_cpp_absl_container_raw_hash_set__testing",
        "cronet_aml_third_party_abseil_cpp_absl_crc_cpu_detect__testing",
        "cronet_aml_third_party_abseil_cpp_absl_crc_crc32c__testing",
        "cronet_aml_third_party_abseil_cpp_absl_crc_crc_cord_state__testing",
        "cronet_aml_third_party_abseil_cpp_absl_crc_crc_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_debugging_debugging_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_debugging_demangle_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_debugging_examine_stack__testing",
        "cronet_aml_third_party_abseil_cpp_absl_debugging_failure_signal_handler__testing",
        "cronet_aml_third_party_abseil_cpp_absl_debugging_stacktrace__testing",
        "cronet_aml_third_party_abseil_cpp_absl_debugging_symbolize__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_commandlineflag__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_commandlineflag_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_config__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_flag_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_marshalling__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_parse__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_private_handle_accessor__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_program_name__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_reflection__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_usage__testing",
        "cronet_aml_third_party_abseil_cpp_absl_flags_usage_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_full__testing",
        "cronet_aml_third_party_abseil_cpp_absl_hash_city__testing",
        "cronet_aml_third_party_abseil_cpp_absl_hash_hash__testing",
        "cronet_aml_third_party_abseil_cpp_absl_hash_low_level_hash__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_die_if_null__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_globals__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_initialize__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_check_op__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_conditions__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_fnmatch__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_format__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_globals__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_log_message__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_log_sink_set__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_nullguard__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_proto__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_internal_vlog_config__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_log_entry__testing",
        "cronet_aml_third_party_abseil_cpp_absl_log_log_sink__testing",
        "cronet_aml_third_party_abseil_cpp_absl_numeric_int128__testing",
        "cronet_aml_third_party_abseil_cpp_absl_profiling_exponential_biased__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_bit_gen_ref__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_distributions__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_nonsecure_base__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_platform__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_pool_urbg__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_randen__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_randen_engine__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_randen_hwaes__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_randen_hwaes_impl__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_randen_slow__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_internal_seed_material__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_random__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_seed_gen_exception__testing",
        "cronet_aml_third_party_abseil_cpp_absl_random_seed_sequences__testing",
        "cronet_aml_third_party_abseil_cpp_absl_status_status__testing",
        "cronet_aml_third_party_abseil_cpp_absl_status_statusor__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_cord__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_cord_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_cordz_functions__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_cordz_handle__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_cordz_info__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_str_format_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_string_view__testing",
        "cronet_aml_third_party_abseil_cpp_absl_strings_strings__testing",
        "cronet_aml_third_party_abseil_cpp_absl_synchronization_graphcycles_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_synchronization_kernel_timeout_internal__testing",
        "cronet_aml_third_party_abseil_cpp_absl_synchronization_synchronization__testing",
        "cronet_aml_third_party_abseil_cpp_absl_time_internal_cctz_civil_time__testing",
        "cronet_aml_third_party_abseil_cpp_absl_time_internal_cctz_time_zone__testing",
        "cronet_aml_third_party_abseil_cpp_absl_time_time__testing",
        "cronet_aml_third_party_abseil_cpp_absl_types_bad_optional_access__testing",
        "cronet_aml_third_party_abseil_cpp_absl_types_bad_variant_access__testing",
        "cronet_aml_third_party_ashmem_ashmem__testing",
        "cronet_aml_third_party_boringssl_boringssl__testing",
        "cronet_aml_third_party_boringssl_boringssl_asm__testing",
        "cronet_aml_third_party_brotli_common__testing",
        "cronet_aml_third_party_brotli_dec__testing",
        "cronet_aml_third_party_ced_ced__testing",
        "cronet_aml_third_party_cpu_features_cpuinfo__testing",
        "cronet_aml_third_party_cpu_features_ndk_compat__testing",
        "cronet_aml_third_party_google_benchmark_google_benchmark__testing",
        "cronet_aml_third_party_googletest_gmock__testing",
        "cronet_aml_third_party_googletest_gtest__testing",
        "cronet_aml_third_party_icu_icui18n__testing",
        "cronet_aml_third_party_icu_icuuc_private__testing",
        "cronet_aml_third_party_jni_zero_jni_zero__testing",
        "cronet_aml_third_party_libevent_libevent__testing",
        "cronet_aml_third_party_libxml_libxml__testing",
        "cronet_aml_third_party_libxml_libxml_utils__testing",
        "cronet_aml_third_party_libxml_xml_reader__testing",
        "cronet_aml_third_party_metrics_proto_metrics_proto__testing",
        "cronet_aml_third_party_modp_b64_modp_b64__testing",
        "cronet_aml_third_party_protobuf_protobuf_full__testing",
        "cronet_aml_third_party_protobuf_protobuf_lite__testing",
        "cronet_aml_third_party_quic_trace_quic_trace_proto__testing",
        "cronet_aml_third_party_re2_re2__testing",
        "cronet_aml_url_url__testing",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r26b_1",
        "-DBENCHMARK_STATIC_DEFINE",
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DGOOGLE_PROTOBUF_INTERNAL_DONATE_STEAL_INLINE=0",
        "-DGOOGLE_PROTOBUF_NO_RTTI",
        "-DGOOGLE_PROTOBUF_NO_STATIC_INITIALIZER",
        "-DGTEST_API_=",
        "-DGTEST_HAS_ABSL",
        "-DGTEST_HAS_POSIX_RE=0",
        "-DGTEST_HAS_TR1_TUPLE=0",
        "-DGTEST_LANG_CXX11=1",
        "-DGTEST_NO_ABSL_FLAGS",
        "-DHAVE_PTHREAD",
        "-DHAVE_SYS_UIO_H",
        "-DICU_UTIL_DATA_IMPL=ICU_UTIL_DATA_FILE",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-DUNIT_TEST",
        "-DUSE_CHROMIUM_ICU=1",
        "-DUSE_REMOTE_TEST_SERVER",
        "-DU_ENABLE_DYLOAD=0",
        "-DU_ENABLE_RESOURCE_TRACING=0",
        "-DU_ENABLE_TRACING=1",
        "-DU_STATIC_IMPLEMENTATION",
        "-DU_USING_ICU_NAMESPACE=0",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/base/allocator/partition_allocator/src/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/net/third_party/quiche/overrides/",
        "external/cronet/net/third_party/quiche/src/",
        "external/cronet/net/third_party/quiche/src/quiche/common/platform/default/",
        "external/cronet/third_party/abseil-cpp/",
        "external/cronet/third_party/boringssl/src/include/",
        "external/cronet/third_party/ced/src/",
        "external/cronet/third_party/google_benchmark/src/include/",
        "external/cronet/third_party/googletest/custom/",
        "external/cronet/third_party/googletest/src/googlemock/include/",
        "external/cronet/third_party/googletest/src/googletest/include/",
        "external/cronet/third_party/icu/source/common/",
        "external/cronet/third_party/icu/source/i18n/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
        "external/cronet/third_party/protobuf/src/",
        "external/cronet/third_party/re2/src/",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
        "-Wl,--script,external/cronet/base/android/library_loader/anchor_functions.lds",
        "-Wl,-wrap,asprintf",
        "-Wl,-wrap,calloc",
        "-Wl,-wrap,free",
        "-Wl,-wrap,getcwd",
        "-Wl,-wrap,malloc",
        "-Wl,-wrap,malloc_usable_size",
        "-Wl,-wrap,memalign",
        "-Wl,-wrap,posix_memalign",
        "-Wl,-wrap,pvalloc",
        "-Wl,-wrap,realloc",
        "-Wl,-wrap,realpath",
        "-Wl,-wrap,strdup",
        "-Wl,-wrap,strndup",
        "-Wl,-wrap,valloc",
        "-Wl,-wrap,vasprintf",
    ],
    stem: "libcronet_unittests_android__library",
    visibility: [
        "//external/cronet:__subpackages__",
        "//packages/modules/Connectivity:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
            ],
        },
        android_arm64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-O2",
                "-mno-outline",
            ],
        },
        android_x86: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
    },
}

// GN: //components/cronet/android:flags_java_proto__protoc_java
java_genrule {
    name: "cronet_aml_components_cronet_android_flags_java_proto__protoc_java",
    srcs: [
        "components/cronet/android/proto/flags.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/protoc_java.py) --protoc " +
         "$(location cronet_aml_third_party_protobuf_protoc) " +
         "--proto-path " +
         "external/cronet/components/cronet/android " +
         "--srcjar " +
         "$(out) " +
         "$(location components/cronet/android/proto/flags.proto)",
    out: [
        "components/cronet/android/flags_java_proto__protoc_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/gn_helpers.py",
        "build/protoc_java.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:flags_java_proto__protoc_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_flags_java_proto__protoc_java__testing",
    srcs: [
        "components/cronet/android/proto/flags.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/protoc_java.py) --protoc " +
         "$(location cronet_aml_third_party_protobuf_protoc) " +
         "--proto-path " +
         "external/cronet/components/cronet/android " +
         "--srcjar " +
         "$(out) " +
         "$(location components/cronet/android/proto/flags.proto)",
    out: [
        "components/cronet/android/flags_java_proto__protoc_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/gn_helpers.py",
        "build/protoc_java.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:http_cache_type_java
java_genrule {
    name: "cronet_aml_components_cronet_android_http_cache_type_java",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location components/cronet/url_request_context_config.h)",
    out: [
        "components/cronet/android/http_cache_type_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "components/cronet/url_request_context_config.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:http_cache_type_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_http_cache_type_java__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location components/cronet/url_request_context_config.h)",
    out: [
        "components/cronet/android/http_cache_type_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "components/cronet/url_request_context_config.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:impl_version
java_genrule {
    name: "cronet_aml_components_cronet_android_impl_version",
    cmd: "mkdir -p $(genDir)/components/cronet/android/templates/org/chromium/net/impl && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-f " +
         "$(location build/util/LASTCHANGE) " +
         "-e " +
         "'API_LEVEL=31' " +
         "-o " +
         "$(out) " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/ImplVersion.template)",
    out: [
        "components/cronet/android/templates/org/chromium/net/impl/ImplVersion.java",
    ],
    tool_files: [
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
        "components/cronet/android/java/src/org/chromium/net/impl/ImplVersion.template",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:impl_version__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_impl_version__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android/templates/org/chromium/net/impl && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-f " +
         "$(location build/util/LASTCHANGE) " +
         "-e " +
         "'API_LEVEL=31' " +
         "-o " +
         "$(out) " +
         "$(location components/cronet/android/java/src/org/chromium/net/impl/ImplVersion.template)",
    out: [
        "components/cronet/android/templates/org/chromium/net/impl/ImplVersion.java",
    ],
    tool_files: [
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
        "components/cronet/android/java/src/org/chromium/net/impl/ImplVersion.template",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:load_states_list
genrule {
    name: "cronet_aml_components_cronet_android_load_states_list",
    srcs: [
        ":cronet_aml_components_cronet_android_load_states_list_preprocess",
    ],
    tools: [
        "soong_zip",
    ],
    cmd: "cp $(in) $(genDir)/LoadState.java && " +
         "$(location soong_zip) -o $(out) -srcjar -C $(genDir) -f $(genDir)/LoadState.java",
    out: [
        "LoadState.srcjar",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:load_states_list__testing
genrule {
    name: "cronet_aml_components_cronet_android_load_states_list__testing",
    srcs: [
        ":cronet_aml_components_cronet_android_load_states_list__testing_preprocess",
    ],
    tools: [
        "soong_zip",
    ],
    cmd: "cp $(in) $(genDir)/LoadState.java && " +
         "$(location soong_zip) -o $(out) -srcjar -C $(genDir) -f $(genDir)/LoadState.java",
    out: [
        "LoadState.srcjar",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:load_states_list__testing
cc_preprocess_no_configuration {
    name: "cronet_aml_components_cronet_android_load_states_list__testing_preprocess",
    srcs: [
        ":cronet_aml_components_cronet_android_load_states_list__testing_rename",
    ],
    cflags: [
        "-DANDROID",
        "-E",
        "-P",
    ],
}

// GN: //components/cronet/android:load_states_list__testing
genrule {
    name: "cronet_aml_components_cronet_android_load_states_list__testing_rename",
    srcs: [
        "components/cronet/android/java/src/org/chromium/net/impl/LoadState.template",
    ],
    cmd: "cp $(in) $(out)",
    out: [
        "LoadState.cc",
    ],
}

// GN: //components/cronet/android:load_states_list
cc_preprocess_no_configuration {
    name: "cronet_aml_components_cronet_android_load_states_list_preprocess",
    srcs: [
        ":cronet_aml_components_cronet_android_load_states_list_rename",
    ],
    cflags: [
        "-DANDROID",
        "-E",
        "-P",
    ],
}

// GN: //components/cronet/android:load_states_list
genrule {
    name: "cronet_aml_components_cronet_android_load_states_list_rename",
    srcs: [
        "components/cronet/android/java/src/org/chromium/net/impl/LoadState.template",
    ],
    cmd: "cp $(in) $(out)",
    out: [
        "LoadState.cc",
    ],
}

// GN: //components/cronet/android:net_idempotency_java
java_genrule {
    name: "cronet_aml_components_cronet_android_net_idempotency_java",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/base/idempotency.h)",
    out: [
        "components/cronet/android/net_idempotency_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/base/idempotency.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:net_idempotency_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_net_idempotency_java__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/base/idempotency.h)",
    out: [
        "components/cronet/android/net_idempotency_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/base/idempotency.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:net_request_priority_java
java_genrule {
    name: "cronet_aml_components_cronet_android_net_request_priority_java",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/base/request_priority.h)",
    out: [
        "components/cronet/android/net_request_priority_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/base/request_priority.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:net_request_priority_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_net_request_priority_java__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/base/request_priority.h)",
    out: [
        "components/cronet/android/net_request_priority_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/base/request_priority.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:network_quality_observation_source_java
java_genrule {
    name: "cronet_aml_components_cronet_android_network_quality_observation_source_java",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/nqe/network_quality_observation_source.h)",
    out: [
        "components/cronet/android/network_quality_observation_source_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/nqe/network_quality_observation_source.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:network_quality_observation_source_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_network_quality_observation_source_java__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/nqe/network_quality_observation_source.h)",
    out: [
        "components/cronet/android/network_quality_observation_source_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/nqe/network_quality_observation_source.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:request_context_config_java_proto__protoc_java
java_genrule {
    name: "cronet_aml_components_cronet_android_request_context_config_java_proto__protoc_java",
    srcs: [
        "components/cronet/android/proto/request_context_config.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/protoc_java.py) --protoc " +
         "$(location cronet_aml_third_party_protobuf_protoc) " +
         "--proto-path " +
         "external/cronet/components/cronet/android " +
         "--srcjar " +
         "$(out) " +
         "$(location components/cronet/android/proto/request_context_config.proto)",
    out: [
        "components/cronet/android/request_context_config_java_proto__protoc_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/gn_helpers.py",
        "build/protoc_java.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:request_context_config_java_proto__protoc_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_request_context_config_java_proto__protoc_java__testing",
    srcs: [
        "components/cronet/android/proto/request_context_config.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/protoc_java.py) --protoc " +
         "$(location cronet_aml_third_party_protobuf_protoc) " +
         "--proto-path " +
         "external/cronet/components/cronet/android " +
         "--srcjar " +
         "$(out) " +
         "$(location components/cronet/android/proto/request_context_config.proto)",
    out: [
        "components/cronet/android/request_context_config_java_proto__protoc_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/gn_helpers.py",
        "build/protoc_java.py",
        "build/zip_helpers.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:rtt_throughput_values_java
java_genrule {
    name: "cronet_aml_components_cronet_android_rtt_throughput_values_java",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/nqe/network_quality.h)",
    out: [
        "components/cronet/android/rtt_throughput_values_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/nqe/network_quality.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:rtt_throughput_values_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_rtt_throughput_values_java__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/nqe/network_quality.h)",
    out: [
        "components/cronet/android/rtt_throughput_values_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/nqe/network_quality.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:url_request_error_java
java_genrule {
    name: "cronet_aml_components_cronet_android_url_request_error_java",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location components/cronet/android/url_request_error.h)",
    out: [
        "components/cronet/android/url_request_error_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "components/cronet/android/url_request_error.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet/android:url_request_error_java__testing
java_genrule {
    name: "cronet_aml_components_cronet_android_url_request_error_java__testing",
    cmd: "mkdir -p $(genDir)/components/cronet/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location components/cronet/android/url_request_error.h)",
    out: [
        "components/cronet/android/url_request_error_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "components/cronet/android/url_request_error.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet:cronet_buildflags
cc_genrule {
    name: "cronet_aml_components_cronet_cronet_buildflags",
    cmd: "mkdir -p $(genDir)/components/cronet && echo '--flags DISABLE_HISTOGRAM_SUPPORT=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//components/cronet:cronet_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "components/cronet/cronet_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet:cronet_buildflags__testing
cc_genrule {
    name: "cronet_aml_components_cronet_cronet_buildflags__testing",
    cmd: "mkdir -p $(genDir)/components/cronet && echo '--flags DISABLE_HISTOGRAM_SUPPORT=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//components/cronet:cronet_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "components/cronet/cronet_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet:cronet_version_header_action
cc_genrule {
    name: "cronet_aml_components_cronet_cronet_version_header_action",
    cmd: "mkdir -p $(genDir)/components/cronet && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-e " +
         "'VERSION_FULL=\"%s.%s.%s.%s\" % (MAJOR,MINOR,BUILD,PATCH)' " +
         "-o " +
         "$(out) " +
         "$(location components/cronet/version.h.in)",
    out: [
        "components/cronet/version.h",
    ],
    tool_files: [
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
        "components/cronet/version.h.in",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/cronet:cronet_version_header_action__testing
cc_genrule {
    name: "cronet_aml_components_cronet_cronet_version_header_action__testing",
    cmd: "mkdir -p $(genDir)/components/cronet && $(location build/util/version.py) --official " +
         "-f " +
         "$(location chrome/VERSION) " +
         "-e " +
         "'VERSION_FULL=\"%s.%s.%s.%s\" % (MAJOR,MINOR,BUILD,PATCH)' " +
         "-o " +
         "$(out) " +
         "$(location components/cronet/version.h.in)",
    out: [
        "components/cronet/version.h",
    ],
    tool_files: [
        "build/util/LASTCHANGE",
        "build/util/android_chrome_version.py",
        "build/util/version.py",
        "chrome/VERSION",
        "components/cronet/version.h.in",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/prefs/android:jni_headers__action
cc_genrule {
    name: "cronet_aml_components_prefs_android_jni_headers__action",
    srcs: [
        "components/prefs/android/java/src/org/chromium/components/prefs/PrefService.java",
    ],
    cmd: "mkdir -p $(genDir)/components/prefs/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/prefs/android/jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/prefs/android/jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/prefs/android/jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/prefs/android/jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "PrefService_jni.h " +
         "--input-file " +
         "$(location components/prefs/android/java/src/org/chromium/components/prefs/PrefService.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "components/prefs/android/jni_headers.srcjar",
        "components/prefs/android/jni_headers/PrefService_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //components/prefs/android:jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_components_prefs_android_jni_headers__action__testing",
    srcs: [
        "components/prefs/android/java/src/org/chromium/components/prefs/PrefService.java",
    ],
    cmd: "mkdir -p $(genDir)/components/prefs/android &&  " +
         "mkdir -p $(genDir)/jni_headers/components/prefs/android/jni_headers && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/components/prefs/android/jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/components/prefs/android/jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/components/prefs/android/jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "PrefService_jni.h " +
         "--input-file " +
         "$(location components/prefs/android/java/src/org/chromium/components/prefs/PrefService.java)",
    out: [
        "components/prefs/android/jni_headers.srcjar",
        "components/prefs/android/jni_headers/PrefService_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //crypto:buildflags
cc_genrule {
    name: "cronet_aml_crypto_buildflags",
    cmd: "mkdir -p $(genDir)/crypto && echo '--flags USE_NSS_CERTS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//crypto:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "crypto/crypto_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //crypto:buildflags__testing
cc_genrule {
    name: "cronet_aml_crypto_buildflags__testing",
    cmd: "mkdir -p $(genDir)/crypto && echo '--flags USE_NSS_CERTS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//crypto:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    host_supported: true,
    out: [
        "crypto/crypto_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:embedded_test_server_aidl__testing
java_library {
    name: "cronet_aml_net_android_embedded_test_server_aidl__testing",
    srcs: [
        "net/test/android/javatests/src/org/chromium/net/test/IConnectionListener.aidl",
        "net/test/android/javatests/src/org/chromium/net/test/IEmbeddedTestServerImpl.aidl",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    min_sdk_version: "30",
    aidl: {
        include_dirs: [
            "frameworks/base/core/java/",
        ],
        local_include_dirs: [
            "net/test/android/javatests/src",
        ],
    },
    sdk_version: "current",
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    jarjar_rules: ":remove_gen_jni_jarjar_rules",
}

// GN: //net/android:net_android_java_enums_srcjar
java_genrule {
    name: "cronet_aml_net_android_net_android_java_enums_srcjar",
    srcs: [
        "net/android/network_change_notifier_android.cc",
        "net/android/traffic_stats.cc",
        "net/socket/socket_tag.cc",
    ],
    cmd: "mkdir -p $(genDir)/net/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/base/network_change_notifier.h) " +
         "$(location net/socket/socket_tag.cc) " +
         "$(location net/android/cert_verify_result_android.h) " +
         "$(location net/android/keystore.h) " +
         "$(location net/android/network_change_notifier_android.cc) " +
         "$(location net/android/traffic_stats.cc)",
    out: [
        "net/android/net_android_java_enums_srcjar.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/android/cert_verify_result_android.h",
        "net/android/keystore.h",
        "net/base/network_change_notifier.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_android_java_enums_srcjar__testing
java_genrule {
    name: "cronet_aml_net_android_net_android_java_enums_srcjar__testing",
    srcs: [
        "net/android/network_change_notifier_android.cc",
        "net/android/traffic_stats.cc",
        "net/socket/socket_tag.cc",
    ],
    cmd: "mkdir -p $(genDir)/net/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/base/network_change_notifier.h) " +
         "$(location net/socket/socket_tag.cc) " +
         "$(location net/android/cert_verify_result_android.h) " +
         "$(location net/android/keystore.h) " +
         "$(location net/android/network_change_notifier_android.cc) " +
         "$(location net/android/traffic_stats.cc)",
    out: [
        "net/android/net_android_java_enums_srcjar.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/android/cert_verify_result_android.h",
        "net/android/keystore.h",
        "net/base/network_change_notifier.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_errors_java
genrule {
    name: "cronet_aml_net_android_net_errors_java",
    srcs: [
        ":cronet_aml_net_android_net_errors_java_preprocess",
    ],
    tools: [
        "soong_zip",
    ],
    cmd: "cp $(in) $(genDir)/NetError.java && " +
         "$(location soong_zip) -o $(out) -srcjar -C $(genDir) -f $(genDir)/NetError.java",
    out: [
        "NetError.srcjar",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_errors_java__testing
genrule {
    name: "cronet_aml_net_android_net_errors_java__testing",
    srcs: [
        ":cronet_aml_net_android_net_errors_java__testing_preprocess",
    ],
    tools: [
        "soong_zip",
    ],
    cmd: "cp $(in) $(genDir)/NetError.java && " +
         "$(location soong_zip) -o $(out) -srcjar -C $(genDir) -f $(genDir)/NetError.java",
    out: [
        "NetError.srcjar",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_errors_java__testing
cc_preprocess_no_configuration {
    name: "cronet_aml_net_android_net_errors_java__testing_preprocess",
    srcs: [
        ":cronet_aml_net_android_net_errors_java__testing_rename",
    ],
    cflags: [
        "-DANDROID",
        "-E",
        "-P",
    ],
}

// GN: //net/android:net_errors_java__testing
genrule {
    name: "cronet_aml_net_android_net_errors_java__testing_rename",
    srcs: [
        "net/android/java/NetError.template",
    ],
    cmd: "cp $(in) $(out)",
    out: [
        "NetError.cc",
    ],
}

// GN: //net/android:net_errors_java
cc_preprocess_no_configuration {
    name: "cronet_aml_net_android_net_errors_java_preprocess",
    srcs: [
        ":cronet_aml_net_android_net_errors_java_rename",
    ],
    cflags: [
        "-DANDROID",
        "-E",
        "-P",
    ],
}

// GN: //net/android:net_errors_java
genrule {
    name: "cronet_aml_net_android_net_errors_java_rename",
    srcs: [
        "net/android/java/NetError.template",
    ],
    cmd: "cp $(in) $(out)",
    out: [
        "NetError.cc",
    ],
}

// GN: //net/android:net_java_test_support__testing
java_library {
    name: "cronet_aml_net_android_net_java_test_support__testing",
    srcs: [
        ":cronet_aml_net_android_net_java_test_support_enums_srcjar__testing",
        ":cronet_aml_net_android_net_test_support_jni__action__testing__java",
        "net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServer.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerRule.java",
        "net/test/android/javatests/src/org/chromium/net/test/util/CertTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/test/util/NetworkChangeNotifierTestUtil.java",
        "net/test/android/javatests/src/org/chromium/net/test/util/TestWebServer.java",
        "net/test/android/javatests/src/org/chromium/net/test/util/WebServer.java",
    ],
    static_libs: [
        "androidx.test.uiautomator_uiautomator",
        "cronet_aml_base_base_java__testing",
        "cronet_aml_base_base_java_test_support__testing",
        "cronet_aml_base_base_java_url_utils_for_test__testing",
        "cronet_aml_net_android_embedded_test_server_aidl_java__testing",
        "cronet_aml_net_android_net_java__testing",
        "cronet_aml_third_party_jni_zero_jni_zero_java__testing",
        "junit",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    min_sdk_version: "30",
    libs: [
        "androidx.annotation_annotation",
        "androidx.test.monitor",
    ],
    sdk_version: "current",
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    jarjar_rules: ":remove_gen_jni_jarjar_rules",
}

// GN: //net/android:net_java_test_support_enums_srcjar__testing
java_genrule {
    name: "cronet_aml_net_android_net_java_test_support_enums_srcjar__testing",
    cmd: "mkdir -p $(genDir)/net/android && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/test/embedded_test_server/embedded_test_server.h) " +
         "$(location net/test/url_request/url_request_failed_job.h)",
    out: [
        "net/android/net_java_test_support_enums_srcjar.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/test/embedded_test_server/embedded_test_server.h",
        "net/test/url_request/url_request_failed_job.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_test_support_jni__action__testing
cc_genrule {
    name: "cronet_aml_net_android_net_test_support_jni__action__testing",
    srcs: [
        "net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/android/net_test_support_jni &&  " +
         "mkdir -p $(genDir)/net/android && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/android/net_test_support_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/android/net_test_support_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/android/net_test_support_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidNetworkLibraryTestUtil_jni.h " +
         "--input-file " +
         "$(location net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java)",
    out: [
        "net/android/net_test_support_jni.srcjar",
        "net/android/net_test_support_jni/AndroidNetworkLibraryTestUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_test_support_jni__action__testing
java_genrule {
    name: "cronet_aml_net_android_net_test_support_jni__action__testing__java",
    srcs: [
        "net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/android/net_test_support_jni &&  " +
         "mkdir -p $(genDir)/net/android && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/android/net_test_support_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/android/net_test_support_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/android/net_test_support_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidNetworkLibraryTestUtil_jni.h " +
         "--input-file " +
         "$(location net/test/android/javatests/src/org/chromium/net/AndroidNetworkLibraryTestUtil.java)",
    out: [
        "net/android/net_test_support_jni.srcjar",
        "net/android/net_test_support_jni/AndroidNetworkLibraryTestUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_test_support_provider_java__testing
java_library {
    name: "cronet_aml_net_android_net_test_support_provider_java__testing",
    srcs: [
        ":cronet_aml_net_android_net_test_support_provider_jni__action__testing__java",
        "net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java",
        "net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticatorService.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerService.java",
    ],
    static_libs: [
        "cronet_aml_base_base_java__testing",
        "cronet_aml_base_base_java_url_utils_for_test__testing",
        "cronet_aml_net_android_embedded_test_server_aidl_java__testing",
        "cronet_aml_net_android_net_java__testing",
        "cronet_aml_third_party_jni_zero_jni_zero_java__testing",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    min_sdk_version: "30",
    sdk_version: "current",
    visibility: [
        "//external/cronet:__subpackages__",
        "//packages/modules/Connectivity:__subpackages__",
    ],
    jarjar_rules: ":remove_gen_jni_jarjar_rules",
}

// GN: //net/android:net_test_support_provider_jni__action__testing
cc_genrule {
    name: "cronet_aml_net_android_net_test_support_provider_jni__action__testing",
    srcs: [
        "net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/android/net_test_support_provider_jni &&  " +
         "mkdir -p $(genDir)/net/android && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/android/net_test_support_provider_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/android/net_test_support_provider_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/android/net_test_support_provider_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "DummySpnegoAuthenticator_jni.h " +
         "--output-name " +
         "EmbeddedTestServerImpl_jni.h " +
         "--input-file " +
         "$(location net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java) " +
         "--input-file " +
         "$(location net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java)",
    out: [
        "net/android/net_test_support_provider_jni.srcjar",
        "net/android/net_test_support_provider_jni/DummySpnegoAuthenticator_jni.h",
        "net/android/net_test_support_provider_jni/EmbeddedTestServerImpl_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_test_support_provider_jni__action__testing
java_genrule {
    name: "cronet_aml_net_android_net_test_support_provider_jni__action__testing__java",
    srcs: [
        "net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java",
        "net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/android/net_test_support_provider_jni &&  " +
         "mkdir -p $(genDir)/net/android && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/android/net_test_support_provider_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/android/net_test_support_provider_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/android/net_test_support_provider_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "DummySpnegoAuthenticator_jni.h " +
         "--output-name " +
         "EmbeddedTestServerImpl_jni.h " +
         "--input-file " +
         "$(location net/test/android/javatests/src/org/chromium/net/test/DummySpnegoAuthenticator.java) " +
         "--input-file " +
         "$(location net/test/android/javatests/src/org/chromium/net/test/EmbeddedTestServerImpl.java)",
    out: [
        "net/android/net_test_support_provider_jni.srcjar",
        "net/android/net_test_support_provider_jni/DummySpnegoAuthenticator_jni.h",
        "net/android/net_test_support_provider_jni/EmbeddedTestServerImpl_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_tests_jni__action__testing
cc_genrule {
    name: "cronet_aml_net_android_net_tests_jni__action__testing",
    srcs: [
        "net/android/javatests/src/org/chromium/net/AndroidKeyStoreTestUtil.java",
        "net/android/javatests/src/org/chromium/net/AndroidProxyConfigServiceTestUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/android/net_tests_jni &&  " +
         "mkdir -p $(genDir)/net/android && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/android/net_tests_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/android/net_tests_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/android/net_tests_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidKeyStoreTestUtil_jni.h " +
         "--output-name " +
         "AndroidProxyConfigServiceTestUtil_jni.h " +
         "--input-file " +
         "$(location net/android/javatests/src/org/chromium/net/AndroidKeyStoreTestUtil.java) " +
         "--input-file " +
         "$(location net/android/javatests/src/org/chromium/net/AndroidProxyConfigServiceTestUtil.java)",
    out: [
        "net/android/net_tests_jni.srcjar",
        "net/android/net_tests_jni/AndroidKeyStoreTestUtil_jni.h",
        "net/android/net_tests_jni/AndroidProxyConfigServiceTestUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/android:net_tests_jni__action__testing
java_genrule {
    name: "cronet_aml_net_android_net_tests_jni__action__testing__java",
    srcs: [
        "net/android/javatests/src/org/chromium/net/AndroidKeyStoreTestUtil.java",
        "net/android/javatests/src/org/chromium/net/AndroidProxyConfigServiceTestUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/android/net_tests_jni &&  " +
         "mkdir -p $(genDir)/net/android && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/android/net_tests_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/android/net_tests_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/android/net_tests_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidKeyStoreTestUtil_jni.h " +
         "--output-name " +
         "AndroidProxyConfigServiceTestUtil_jni.h " +
         "--input-file " +
         "$(location net/android/javatests/src/org/chromium/net/AndroidKeyStoreTestUtil.java) " +
         "--input-file " +
         "$(location net/android/javatests/src/org/chromium/net/AndroidProxyConfigServiceTestUtil.java)",
    out: [
        "net/android/net_tests_jni.srcjar",
        "net/android/net_tests_jni/AndroidKeyStoreTestUtil_jni.h",
        "net/android/net_tests_jni/AndroidProxyConfigServiceTestUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/base/registry_controlled_domains:lookup_strings_test_sets__testing
cc_genrule {
    name: "cronet_aml_net_base_registry_controlled_domains_lookup_strings_test_sets__testing",
    cmd: "mkdir -p $(genDir)/net/base/registry_controlled_domains && $(location net/tools/dafsa/make_dafsa.py) $(location net/base/registry_controlled_domains/effective_tld_names.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest1.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest1-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest2.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest2-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest3.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest3-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest4.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest4-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest5.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest5-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest6.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest6-inc.cc)",
    out: [
        "net/base/registry_controlled_domains/effective_tld_names-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest1-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest2-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest3-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest4-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest5-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest6-inc.cc",
    ],
    tool_files: [
        "net/base/registry_controlled_domains/effective_tld_names.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest1.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest2.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest3.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest4.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest5.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest6.gperf",
        "net/tools/dafsa/make_dafsa.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/base/registry_controlled_domains:registry_controlled_domains
cc_genrule {
    name: "cronet_aml_net_base_registry_controlled_domains_registry_controlled_domains",
    cmd: "mkdir -p $(genDir)/net/base/registry_controlled_domains && $(location net/tools/dafsa/make_dafsa.py) --reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest1.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest1-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest2.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest2-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest3.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest3-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest4.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest4-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest5.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest5-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest6.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest6-reversed-inc.cc)",
    out: [
        "net/base/registry_controlled_domains/effective_tld_names-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest1-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest2-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest3-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest4-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest5-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest6-reversed-inc.cc",
    ],
    tool_files: [
        "net/base/registry_controlled_domains/effective_tld_names.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest1.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest2.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest3.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest4.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest5.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest6.gperf",
        "net/tools/dafsa/make_dafsa.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/base/registry_controlled_domains:registry_controlled_domains__testing
cc_genrule {
    name: "cronet_aml_net_base_registry_controlled_domains_registry_controlled_domains__testing",
    cmd: "mkdir -p $(genDir)/net/base/registry_controlled_domains && $(location net/tools/dafsa/make_dafsa.py) --reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest1.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest1-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest2.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest2-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest3.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest3-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest4.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest4-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest5.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest5-reversed-inc.cc) " +
         "&& " +
         "python3 $(location net/tools/dafsa/make_dafsa.py) " +
         "--reverse " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest6.gperf) " +
         "$(location net/base/registry_controlled_domains/effective_tld_names_unittest6-reversed-inc.cc)",
    out: [
        "net/base/registry_controlled_domains/effective_tld_names-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest1-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest2-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest3-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest4-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest5-reversed-inc.cc",
        "net/base/registry_controlled_domains/effective_tld_names_unittest6-reversed-inc.cc",
    ],
    tool_files: [
        "net/base/registry_controlled_domains/effective_tld_names.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest1.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest2.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest3.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest4.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest5.gperf",
        "net/base/registry_controlled_domains/effective_tld_names_unittest6.gperf",
        "net/tools/dafsa/make_dafsa.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:buildflags
cc_genrule {
    name: "cronet_aml_net_buildflags",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"false\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "net/net_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:buildflags__testing
cc_genrule {
    name: "cronet_aml_net_buildflags__testing",
    cmd: "if [[ ( $$CC_ARCH == 'arm' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'arm64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'riscv64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"false\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi; " +
         "if [[ ( $$CC_ARCH == 'x86_64' && $$CC_OS == 'android' ) ]]; " +
         "then " +
         "mkdir -p $(genDir)/net && echo '--flags POSIX_BYPASS_MMAP=\"true\" DISABLE_FILE_SUPPORT=\"true\" ENABLE_MDNS=\"false\" ENABLE_REPORTING=\"true\" ENABLE_WEBSOCKETS=\"false\" ENABLE_CLIENT_CERTIFICATES=\"true\" INCLUDE_TRANSPORT_SECURITY_STATE_PRELOAD_LIST=\"false\" USE_KERBEROS=\"true\" USE_EXTERNAL_GSSAPI=\"false\" CHROME_ROOT_STORE_OPTIONAL=\"false\" CHROME_ROOT_STORE_ONLY=\"false\" CHROME_ROOT_STORE_SUPPORTED=\"false\" ENABLE_DEVICE_BOUND_SESSIONS=\"false\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin; " +
         "fi;",
    out: [
        "net/net_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:cronet_buildflags
cc_genrule {
    name: "cronet_aml_net_cronet_buildflags",
    cmd: "mkdir -p $(genDir)/net/base && echo '--flags CRONET_BUILD=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:cronet_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "net/base/cronet_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:cronet_buildflags__testing
cc_genrule {
    name: "cronet_aml_net_cronet_buildflags__testing",
    cmd: "mkdir -p $(genDir)/net/base && echo '--flags CRONET_BUILD=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//net:cronet_buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "net/base/cronet_buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:effective_connection_type_java
java_genrule {
    name: "cronet_aml_net_effective_connection_type_java",
    cmd: "mkdir -p $(genDir)/net && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/nqe/effective_connection_type.h)",
    out: [
        "net/effective_connection_type_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/nqe/effective_connection_type.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:effective_connection_type_java__testing
java_genrule {
    name: "cronet_aml_net_effective_connection_type_java__testing",
    cmd: "mkdir -p $(genDir)/net && $(location build/android/gyp/java_cpp_enum.py) --srcjar " +
         "$(out) " +
         "$(location net/nqe/effective_connection_type.h)",
    out: [
        "net/effective_connection_type_java.srcjar",
    ],
    tool_files: [
        "build/action_helpers.py",
        "build/android/gyp/java_cpp_enum.py",
        "build/android/gyp/util/__init__.py",
        "build/android/gyp/util/build_utils.py",
        "build/android/gyp/util/java_cpp_utils.py",
        "build/gn_helpers.py",
        "build/zip_helpers.py",
        "net/nqe/effective_connection_type.h",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/http:transport_security_state_unittest_data__testing
cc_genrule {
    name: "cronet_aml_net_http_transport_security_state_unittest_data__testing",
    tools: [
        "cronet_aml_net_tools_transport_security_state_generator_transport_security_state_generator__testing",
    ],
    cmd: "mkdir -p $(genDir)/net/http && $(location cronet_aml_net_tools_transport_security_state_generator_transport_security_state_generator__testing) " +
         "$(location net/http/transport_security_state_static_unittest1.json) " +
         "$(location net/http/transport_security_state_static_unittest1_pins.json) " +
         "$(location net/http/transport_security_state_static_unittest.pins) " +
         "$(location net/http/transport_security_state_static_unittest.template) " +
         "$(location net/http/transport_security_state_static_unittest1.h) " +
         "&& " +
         "$(location cronet_aml_net_tools_transport_security_state_generator_transport_security_state_generator__testing) " +
         "$(location net/http/transport_security_state_static_unittest2.json) " +
         "$(location net/http/transport_security_state_static_unittest2_pins.json) " +
         "$(location net/http/transport_security_state_static_unittest.pins) " +
         "$(location net/http/transport_security_state_static_unittest.template) " +
         "$(location net/http/transport_security_state_static_unittest2.h) " +
         "&& " +
         "$(location cronet_aml_net_tools_transport_security_state_generator_transport_security_state_generator__testing) " +
         "$(location net/http/transport_security_state_static_unittest3.json) " +
         "$(location net/http/transport_security_state_static_unittest3_pins.json) " +
         "$(location net/http/transport_security_state_static_unittest.pins) " +
         "$(location net/http/transport_security_state_static_unittest.template) " +
         "$(location net/http/transport_security_state_static_unittest3.h)",
    out: [
        "net/http/transport_security_state_static_unittest1.h",
        "net/http/transport_security_state_static_unittest2.h",
        "net/http/transport_security_state_static_unittest3.h",
    ],
    tool_files: [
        "build/gn_run_binary.py",
        "net/http/transport_security_state_static_unittest.pins",
        "net/http/transport_security_state_static_unittest.template",
        "net/http/transport_security_state_static_unittest1.json",
        "net/http/transport_security_state_static_unittest1_pins.json",
        "net/http/transport_security_state_static_unittest2.json",
        "net/http/transport_security_state_static_unittest2_pins.json",
        "net/http/transport_security_state_static_unittest3.json",
        "net/http/transport_security_state_static_unittest3_pins.json",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/http:transport_security_state_unittest_data_default__testing
cc_genrule {
    name: "cronet_aml_net_http_transport_security_state_unittest_data_default__testing",
    tools: [
        "cronet_aml_net_tools_transport_security_state_generator_transport_security_state_generator__testing",
    ],
    cmd: "mkdir -p $(genDir)/net/http && $(location cronet_aml_net_tools_transport_security_state_generator_transport_security_state_generator__testing) " +
         "$(location net/http/transport_security_state_static_unittest_default.json) " +
         "$(location net/http/transport_security_state_static_unittest_default_pins.json) " +
         "$(location net/http/transport_security_state_static_unittest_default.pins) " +
         "$(location net/http/transport_security_state_static_unittest.template) " +
         "$(location net/http/transport_security_state_static_unittest_default.h)",
    out: [
        "net/http/transport_security_state_static_unittest_default.h",
    ],
    tool_files: [
        "build/gn_run_binary.py",
        "net/http/transport_security_state_static_unittest.template",
        "net/http/transport_security_state_static_unittest_default.json",
        "net/http/transport_security_state_static_unittest_default.pins",
        "net/http/transport_security_state_static_unittest_default_pins.json",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:net_jni_headers__action
cc_genrule {
    name: "cronet_aml_net_net_jni_headers__action",
    srcs: [
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/net_jni_headers &&  " +
         "mkdir -p $(genDir)/net && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/net_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/net_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/net_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidCertVerifyResult_jni.h " +
         "--output-name " +
         "AndroidKeyStore_jni.h " +
         "--output-name " +
         "AndroidNetworkLibrary_jni.h " +
         "--output-name " +
         "AndroidTrafficStats_jni.h " +
         "--output-name " +
         "DnsStatus_jni.h " +
         "--output-name " +
         "GURLUtils_jni.h " +
         "--output-name " +
         "HttpNegotiateAuthenticator_jni.h " +
         "--output-name " +
         "HttpUtil_jni.h " +
         "--output-name " +
         "NetStringUtil_jni.h " +
         "--output-name " +
         "NetworkActiveNotifier_jni.h " +
         "--output-name " +
         "NetworkChangeNotifier_jni.h " +
         "--output-name " +
         "ProxyChangeListener_jni.h " +
         "--output-name " +
         "X509Util_jni.h " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidKeyStore.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidTrafficStats.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/DnsStatus.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/GURLUtils.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetStringUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkActiveNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkChangeNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/ProxyChangeListener.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/X509Util.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "net/net_jni_headers.srcjar",
        "net/net_jni_headers/AndroidCertVerifyResult_jni.h",
        "net/net_jni_headers/AndroidKeyStore_jni.h",
        "net/net_jni_headers/AndroidNetworkLibrary_jni.h",
        "net/net_jni_headers/AndroidTrafficStats_jni.h",
        "net/net_jni_headers/DnsStatus_jni.h",
        "net/net_jni_headers/GURLUtils_jni.h",
        "net/net_jni_headers/HttpNegotiateAuthenticator_jni.h",
        "net/net_jni_headers/HttpUtil_jni.h",
        "net/net_jni_headers/NetStringUtil_jni.h",
        "net/net_jni_headers/NetworkActiveNotifier_jni.h",
        "net/net_jni_headers/NetworkChangeNotifier_jni.h",
        "net/net_jni_headers/ProxyChangeListener_jni.h",
        "net/net_jni_headers/X509Util_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:net_jni_headers__action
java_genrule {
    name: "cronet_aml_net_net_jni_headers__action__java",
    srcs: [
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/net_jni_headers &&  " +
         "mkdir -p $(genDir)/net && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/net_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/net_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/net_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidCertVerifyResult_jni.h " +
         "--output-name " +
         "AndroidKeyStore_jni.h " +
         "--output-name " +
         "AndroidNetworkLibrary_jni.h " +
         "--output-name " +
         "AndroidTrafficStats_jni.h " +
         "--output-name " +
         "DnsStatus_jni.h " +
         "--output-name " +
         "GURLUtils_jni.h " +
         "--output-name " +
         "HttpNegotiateAuthenticator_jni.h " +
         "--output-name " +
         "HttpUtil_jni.h " +
         "--output-name " +
         "NetStringUtil_jni.h " +
         "--output-name " +
         "NetworkActiveNotifier_jni.h " +
         "--output-name " +
         "NetworkChangeNotifier_jni.h " +
         "--output-name " +
         "ProxyChangeListener_jni.h " +
         "--output-name " +
         "X509Util_jni.h " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidKeyStore.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidTrafficStats.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/DnsStatus.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/GURLUtils.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetStringUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkActiveNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkChangeNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/ProxyChangeListener.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/X509Util.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "net/net_jni_headers.srcjar",
        "net/net_jni_headers/AndroidCertVerifyResult_jni.h",
        "net/net_jni_headers/AndroidKeyStore_jni.h",
        "net/net_jni_headers/AndroidNetworkLibrary_jni.h",
        "net/net_jni_headers/AndroidTrafficStats_jni.h",
        "net/net_jni_headers/DnsStatus_jni.h",
        "net/net_jni_headers/GURLUtils_jni.h",
        "net/net_jni_headers/HttpNegotiateAuthenticator_jni.h",
        "net/net_jni_headers/HttpUtil_jni.h",
        "net/net_jni_headers/NetStringUtil_jni.h",
        "net/net_jni_headers/NetworkActiveNotifier_jni.h",
        "net/net_jni_headers/NetworkChangeNotifier_jni.h",
        "net/net_jni_headers/ProxyChangeListener_jni.h",
        "net/net_jni_headers/X509Util_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:net_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_net_net_jni_headers__action__testing",
    srcs: [
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/net_jni_headers &&  " +
         "mkdir -p $(genDir)/net && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/net_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/net_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/net_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidCertVerifyResult_jni.h " +
         "--output-name " +
         "AndroidKeyStore_jni.h " +
         "--output-name " +
         "AndroidNetworkLibrary_jni.h " +
         "--output-name " +
         "AndroidTrafficStats_jni.h " +
         "--output-name " +
         "DnsStatus_jni.h " +
         "--output-name " +
         "GURLUtils_jni.h " +
         "--output-name " +
         "HttpNegotiateAuthenticator_jni.h " +
         "--output-name " +
         "HttpUtil_jni.h " +
         "--output-name " +
         "NetStringUtil_jni.h " +
         "--output-name " +
         "NetworkActiveNotifier_jni.h " +
         "--output-name " +
         "NetworkChangeNotifier_jni.h " +
         "--output-name " +
         "ProxyChangeListener_jni.h " +
         "--output-name " +
         "X509Util_jni.h " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidKeyStore.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidTrafficStats.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/DnsStatus.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/GURLUtils.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetStringUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkActiveNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkChangeNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/ProxyChangeListener.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/X509Util.java)",
    out: [
        "net/net_jni_headers.srcjar",
        "net/net_jni_headers/AndroidCertVerifyResult_jni.h",
        "net/net_jni_headers/AndroidKeyStore_jni.h",
        "net/net_jni_headers/AndroidNetworkLibrary_jni.h",
        "net/net_jni_headers/AndroidTrafficStats_jni.h",
        "net/net_jni_headers/DnsStatus_jni.h",
        "net/net_jni_headers/GURLUtils_jni.h",
        "net/net_jni_headers/HttpNegotiateAuthenticator_jni.h",
        "net/net_jni_headers/HttpUtil_jni.h",
        "net/net_jni_headers/NetStringUtil_jni.h",
        "net/net_jni_headers/NetworkActiveNotifier_jni.h",
        "net/net_jni_headers/NetworkChangeNotifier_jni.h",
        "net/net_jni_headers/ProxyChangeListener_jni.h",
        "net/net_jni_headers/X509Util_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net:net_jni_headers__action__testing
java_genrule {
    name: "cronet_aml_net_net_jni_headers__action__testing__java",
    srcs: [
        "net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java",
        "net/android/java/src/org/chromium/net/AndroidKeyStore.java",
        "net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java",
        "net/android/java/src/org/chromium/net/AndroidTrafficStats.java",
        "net/android/java/src/org/chromium/net/DnsStatus.java",
        "net/android/java/src/org/chromium/net/GURLUtils.java",
        "net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java",
        "net/android/java/src/org/chromium/net/HttpUtil.java",
        "net/android/java/src/org/chromium/net/NetStringUtil.java",
        "net/android/java/src/org/chromium/net/NetworkActiveNotifier.java",
        "net/android/java/src/org/chromium/net/NetworkChangeNotifier.java",
        "net/android/java/src/org/chromium/net/ProxyChangeListener.java",
        "net/android/java/src/org/chromium/net/X509Util.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/net/net_jni_headers &&  " +
         "mkdir -p $(genDir)/net && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/net/net_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/net/net_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/net/net_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "AndroidCertVerifyResult_jni.h " +
         "--output-name " +
         "AndroidKeyStore_jni.h " +
         "--output-name " +
         "AndroidNetworkLibrary_jni.h " +
         "--output-name " +
         "AndroidTrafficStats_jni.h " +
         "--output-name " +
         "DnsStatus_jni.h " +
         "--output-name " +
         "GURLUtils_jni.h " +
         "--output-name " +
         "HttpNegotiateAuthenticator_jni.h " +
         "--output-name " +
         "HttpUtil_jni.h " +
         "--output-name " +
         "NetStringUtil_jni.h " +
         "--output-name " +
         "NetworkActiveNotifier_jni.h " +
         "--output-name " +
         "NetworkChangeNotifier_jni.h " +
         "--output-name " +
         "ProxyChangeListener_jni.h " +
         "--output-name " +
         "X509Util_jni.h " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidCertVerifyResult.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidKeyStore.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidNetworkLibrary.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/AndroidTrafficStats.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/DnsStatus.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/GURLUtils.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/HttpUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetStringUtil.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkActiveNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/NetworkChangeNotifier.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/ProxyChangeListener.java) " +
         "--input-file " +
         "$(location net/android/java/src/org/chromium/net/X509Util.java)",
    out: [
        "net/net_jni_headers.srcjar",
        "net/net_jni_headers/AndroidCertVerifyResult_jni.h",
        "net/net_jni_headers/AndroidKeyStore_jni.h",
        "net/net_jni_headers/AndroidNetworkLibrary_jni.h",
        "net/net_jni_headers/AndroidTrafficStats_jni.h",
        "net/net_jni_headers/DnsStatus_jni.h",
        "net/net_jni_headers/GURLUtils_jni.h",
        "net/net_jni_headers/HttpNegotiateAuthenticator_jni.h",
        "net/net_jni_headers/HttpUtil_jni.h",
        "net/net_jni_headers/NetStringUtil_jni.h",
        "net/net_jni_headers/NetworkActiveNotifier_jni.h",
        "net/net_jni_headers/NetworkChangeNotifier_jni.h",
        "net/net_jni_headers/ProxyChangeListener_jni.h",
        "net/net_jni_headers/X509Util_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/third_party/quiche:blind_sign_auth_proto_gen__testing
cc_genrule {
    name: "cronet_aml_net_third_party_quiche_blind_sign_auth_proto_gen__testing",
    srcs: [
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/any.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/attestation.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/auth_and_sign.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/blind_sign_auth_options.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/get_initial_data.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/key_services.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/proxy_layer.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/public_metadata.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/spend_token_data.proto",
        "third_party/anonymous_tokens/src/anonymous_tokens/proto/anonymous_tokens.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "$(location cronet_aml_third_party_protobuf_protoc) --proto_path=external/cronet/net/third_party/quiche/src --proto_path=external/cronet/third_party/anonymous_tokens/src/ --cpp_out=lite=true:$(genDir)/net/third_party/quiche/src/ $(in)",
    out: [
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/any.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/attestation.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/auth_and_sign.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/blind_sign_auth_options.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/get_initial_data.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/key_services.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/proxy_layer.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/public_metadata.pb.cc",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/spend_token_data.pb.cc",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //net/third_party/quiche:blind_sign_auth_proto_gen__testing
cc_genrule {
    name: "cronet_aml_net_third_party_quiche_blind_sign_auth_proto_gen__testing_headers",
    srcs: [
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/any.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/attestation.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/auth_and_sign.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/blind_sign_auth_options.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/get_initial_data.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/key_services.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/proxy_layer.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/public_metadata.proto",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/spend_token_data.proto",
        "third_party/anonymous_tokens/src/anonymous_tokens/proto/anonymous_tokens.proto",
    ],
    tools: [
        "cronet_aml_third_party_protobuf_protoc",
    ],
    cmd: "$(location cronet_aml_third_party_protobuf_protoc) --proto_path=external/cronet/net/third_party/quiche/src --proto_path=external/cronet/third_party/anonymous_tokens/src/ --cpp_out=lite=true:$(genDir)/net/third_party/quiche/src/ $(in)",
    out: [
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/any.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/attestation.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/auth_and_sign.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/blind_sign_auth_options.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/get_initial_data.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/key_services.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/proxy_layer.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/public_metadata.pb.h",
        "net/third_party/quiche/src/quiche/blind_sign_auth/proto/spend_token_data.pb.h",
    ],
    export_include_dirs: [
        ".",
        "net/third_party/quiche/src",
        "protos",
    ],
    apex_available: [
        "com.android.tethering",
    ],
}

// GN: //testing/android/native_test:native_main_runner_jni__action__testing
cc_genrule {
    name: "cronet_aml_testing_android_native_test_native_main_runner_jni__action__testing",
    srcs: [
        "testing/android/native_test/java/src/org/chromium/native_test/MainRunner.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/testing/android/native_test/native_main_runner_jni &&  " +
         "mkdir -p $(genDir)/testing/android/native_test && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/testing/android/native_test/native_main_runner_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/testing/android/native_test/native_main_runner_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/testing/android/native_test/native_main_runner_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "MainRunner_jni.h " +
         "--input-file " +
         "$(location testing/android/native_test/java/src/org/chromium/native_test/MainRunner.java)",
    out: [
        "testing/android/native_test/native_main_runner_jni.srcjar",
        "testing/android/native_test/native_main_runner_jni/MainRunner_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //testing/android/native_test:native_main_runner_jni__action__testing
java_genrule {
    name: "cronet_aml_testing_android_native_test_native_main_runner_jni__action__testing__java",
    srcs: [
        "testing/android/native_test/java/src/org/chromium/native_test/MainRunner.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/testing/android/native_test/native_main_runner_jni &&  " +
         "mkdir -p $(genDir)/testing/android/native_test && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/testing/android/native_test/native_main_runner_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/testing/android/native_test/native_main_runner_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/testing/android/native_test/native_main_runner_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "MainRunner_jni.h " +
         "--input-file " +
         "$(location testing/android/native_test/java/src/org/chromium/native_test/MainRunner.java)",
    out: [
        "testing/android/native_test/native_main_runner_jni.srcjar",
        "testing/android/native_test/native_main_runner_jni/MainRunner_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //testing/android/native_test:native_test_jni__action__testing
cc_genrule {
    name: "cronet_aml_testing_android_native_test_native_test_jni__action__testing",
    srcs: [
        "testing/android/native_test/java/src/org/chromium/native_test/NativeTest.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/testing/android/native_test/native_test_jni &&  " +
         "mkdir -p $(genDir)/testing/android/native_test && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/testing/android/native_test/native_test_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/testing/android/native_test/native_test_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/testing/android/native_test/native_test_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "NativeTest_jni.h " +
         "--input-file " +
         "$(location testing/android/native_test/java/src/org/chromium/native_test/NativeTest.java)",
    out: [
        "testing/android/native_test/native_test_jni.srcjar",
        "testing/android/native_test/native_test_jni/NativeTest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //testing/android/native_test:native_test_jni__action__testing
java_genrule {
    name: "cronet_aml_testing_android_native_test_native_test_jni__action__testing__java",
    srcs: [
        "testing/android/native_test/java/src/org/chromium/native_test/NativeTest.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/testing/android/native_test/native_test_jni &&  " +
         "mkdir -p $(genDir)/testing/android/native_test && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/testing/android/native_test/native_test_jni " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/testing/android/native_test/native_test_jni.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/testing/android/native_test/native_test_jni_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "NativeTest_jni.h " +
         "--input-file " +
         "$(location testing/android/native_test/java/src/org/chromium/native_test/NativeTest.java)",
    out: [
        "testing/android/native_test/native_test_jni.srcjar",
        "testing/android/native_test/native_test_jni/NativeTest_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //testing/gtest:gtest__testing
cc_library_static {
    name: "cronet_aml_testing_gtest_gtest__testing",
    srcs: [
        "testing/gtest/empty.cc",
        "testing/multiprocess_func_list.cc",
    ],
    shared_libs: [
        "libandroid",
        "liblog",
    ],
    generated_headers: [
        "cronet_aml_base_allocator_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromecast_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromeos_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_debugging_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_partition_alloc_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr_buildflags__testing",
        "cronet_aml_base_anchor_functions_buildflags__testing",
        "cronet_aml_base_build_date__testing",
        "cronet_aml_base_cfi_buildflags__testing",
        "cronet_aml_base_check_version_internal_action__testing",
        "cronet_aml_base_clang_profiling_buildflags__testing",
        "cronet_aml_base_debugging_buildflags__testing",
        "cronet_aml_base_feature_list_buildflags__testing",
        "cronet_aml_base_fuzzing_buildflags__testing",
        "cronet_aml_base_ios_cronet_buildflags__testing",
        "cronet_aml_base_logging_buildflags__testing",
        "cronet_aml_base_message_pump_buildflags__testing",
        "cronet_aml_base_orderfile_buildflags__testing",
        "cronet_aml_base_power_monitor_buildflags__testing",
        "cronet_aml_base_profiler_buildflags__testing",
        "cronet_aml_base_protected_memory_buildflags__testing",
        "cronet_aml_base_rust_buildflags__testing",
        "cronet_aml_base_sanitizer_buildflags__testing",
        "cronet_aml_base_synchronization_buildflags__testing",
        "cronet_aml_base_tracing_buildflags__testing",
        "cronet_aml_build_blink_buildflags__testing",
        "cronet_aml_build_branding_buildflags__testing",
        "cronet_aml_build_chromecast_buildflags__testing",
        "cronet_aml_build_chromeos_buildflags__testing",
        "cronet_aml_build_config_compiler_compiler_buildflags__testing",
        "cronet_aml_build_ios_buildflags__testing",
    ],
    export_generated_headers: [
        "cronet_aml_base_allocator_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromecast_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_chromeos_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_debugging_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_partition_alloc_buildflags__testing",
        "cronet_aml_base_allocator_partition_allocator_src_partition_alloc_raw_ptr_buildflags__testing",
        "cronet_aml_base_anchor_functions_buildflags__testing",
        "cronet_aml_base_build_date__testing",
        "cronet_aml_base_cfi_buildflags__testing",
        "cronet_aml_base_check_version_internal_action__testing",
        "cronet_aml_base_clang_profiling_buildflags__testing",
        "cronet_aml_base_debugging_buildflags__testing",
        "cronet_aml_base_feature_list_buildflags__testing",
        "cronet_aml_base_fuzzing_buildflags__testing",
        "cronet_aml_base_ios_cronet_buildflags__testing",
        "cronet_aml_base_logging_buildflags__testing",
        "cronet_aml_base_message_pump_buildflags__testing",
        "cronet_aml_base_orderfile_buildflags__testing",
        "cronet_aml_base_power_monitor_buildflags__testing",
        "cronet_aml_base_profiler_buildflags__testing",
        "cronet_aml_base_protected_memory_buildflags__testing",
        "cronet_aml_base_rust_buildflags__testing",
        "cronet_aml_base_sanitizer_buildflags__testing",
        "cronet_aml_base_synchronization_buildflags__testing",
        "cronet_aml_base_tracing_buildflags__testing",
        "cronet_aml_build_blink_buildflags__testing",
        "cronet_aml_build_branding_buildflags__testing",
        "cronet_aml_build_chromecast_buildflags__testing",
        "cronet_aml_build_chromeos_buildflags__testing",
        "cronet_aml_build_config_compiler_compiler_buildflags__testing",
        "cronet_aml_build_ios_buildflags__testing",
    ],
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r26b_1",
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DGTEST_API_=",
        "-DGTEST_HAS_ABSL",
        "-DGTEST_HAS_POSIX_RE=0",
        "-DGTEST_HAS_TR1_TUPLE=0",
        "-DGTEST_LANG_CXX11=1",
        "-DGTEST_NO_ABSL_FLAGS",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-DUNIT_TEST",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/abseil-cpp/",
        "external/cronet/third_party/googletest/custom/",
        "external/cronet/third_party/googletest/src/googletest/include/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
        "external/cronet/third_party/re2/src/",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
        "-Wl,--script,external/cronet/base/android/library_loader/anchor_functions.lds",
        "-Wl,-wrap,asprintf",
        "-Wl,-wrap,calloc",
        "-Wl,-wrap,free",
        "-Wl,-wrap,getcwd",
        "-Wl,-wrap,malloc",
        "-Wl,-wrap,malloc_usable_size",
        "-Wl,-wrap,memalign",
        "-Wl,-wrap,posix_memalign",
        "-Wl,-wrap,pvalloc",
        "-Wl,-wrap,realloc",
        "-Wl,-wrap,realpath",
        "-Wl,-wrap,strdup",
        "-Wl,-wrap,strndup",
        "-Wl,-wrap,valloc",
        "-Wl,-wrap,vasprintf",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
            ],
        },
        android_arm64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-O2",
                "-mno-outline",
            ],
        },
        android_x86: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-D_FORTIFY_SOURCE=2",
                "-msse3",
            ],
        },
    },
}

// GN: //third_party/boringssl:boringssl__testing
cc_library_static {
    name: "cronet_aml_third_party_boringssl_boringssl__testing",
    srcs: [
        "third_party/boringssl/src/crypto/asn1/a_bitstr.c",
        "third_party/boringssl/src/crypto/asn1/a_bool.c",
        "third_party/boringssl/src/crypto/asn1/a_d2i_fp.c",
        "third_party/boringssl/src/crypto/asn1/a_dup.c",
        "third_party/boringssl/src/crypto/asn1/a_gentm.c",
        "third_party/boringssl/src/crypto/asn1/a_i2d_fp.c",
        "third_party/boringssl/src/crypto/asn1/a_int.c",
        "third_party/boringssl/src/crypto/asn1/a_mbstr.c",
        "third_party/boringssl/src/crypto/asn1/a_object.c",
        "third_party/boringssl/src/crypto/asn1/a_octet.c",
        "third_party/boringssl/src/crypto/asn1/a_strex.c",
        "third_party/boringssl/src/crypto/asn1/a_strnid.c",
        "third_party/boringssl/src/crypto/asn1/a_time.c",
        "third_party/boringssl/src/crypto/asn1/a_type.c",
        "third_party/boringssl/src/crypto/asn1/a_utctm.c",
        "third_party/boringssl/src/crypto/asn1/asn1_lib.c",
        "third_party/boringssl/src/crypto/asn1/asn1_par.c",
        "third_party/boringssl/src/crypto/asn1/asn_pack.c",
        "third_party/boringssl/src/crypto/asn1/f_int.c",
        "third_party/boringssl/src/crypto/asn1/f_string.c",
        "third_party/boringssl/src/crypto/asn1/posix_time.c",
        "third_party/boringssl/src/crypto/asn1/tasn_dec.c",
        "third_party/boringssl/src/crypto/asn1/tasn_enc.c",
        "third_party/boringssl/src/crypto/asn1/tasn_fre.c",
        "third_party/boringssl/src/crypto/asn1/tasn_new.c",
        "third_party/boringssl/src/crypto/asn1/tasn_typ.c",
        "third_party/boringssl/src/crypto/asn1/tasn_utl.c",
        "third_party/boringssl/src/crypto/base64/base64.c",
        "third_party/boringssl/src/crypto/bio/bio.c",
        "third_party/boringssl/src/crypto/bio/bio_mem.c",
        "third_party/boringssl/src/crypto/bio/connect.c",
        "third_party/boringssl/src/crypto/bio/errno.c",
        "third_party/boringssl/src/crypto/bio/fd.c",
        "third_party/boringssl/src/crypto/bio/file.c",
        "third_party/boringssl/src/crypto/bio/hexdump.c",
        "third_party/boringssl/src/crypto/bio/pair.c",
        "third_party/boringssl/src/crypto/bio/printf.c",
        "third_party/boringssl/src/crypto/bio/socket.c",
        "third_party/boringssl/src/crypto/bio/socket_helper.c",
        "third_party/boringssl/src/crypto/blake2/blake2.c",
        "third_party/boringssl/src/crypto/bn_extra/bn_asn1.c",
        "third_party/boringssl/src/crypto/bn_extra/convert.c",
        "third_party/boringssl/src/crypto/buf/buf.c",
        "third_party/boringssl/src/crypto/bytestring/asn1_compat.c",
        "third_party/boringssl/src/crypto/bytestring/ber.c",
        "third_party/boringssl/src/crypto/bytestring/cbb.c",
        "third_party/boringssl/src/crypto/bytestring/cbs.c",
        "third_party/boringssl/src/crypto/bytestring/unicode.c",
        "third_party/boringssl/src/crypto/chacha/chacha.c",
        "third_party/boringssl/src/crypto/cipher_extra/cipher_extra.c",
        "third_party/boringssl/src/crypto/cipher_extra/derive_key.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_aesctrhmac.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_aesgcmsiv.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_chacha20poly1305.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_des.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_null.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_rc2.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_rc4.c",
        "third_party/boringssl/src/crypto/cipher_extra/e_tls.c",
        "third_party/boringssl/src/crypto/cipher_extra/tls_cbc.c",
        "third_party/boringssl/src/crypto/conf/conf.c",
        "third_party/boringssl/src/crypto/cpu_aarch64_apple.c",
        "third_party/boringssl/src/crypto/cpu_aarch64_fuchsia.c",
        "third_party/boringssl/src/crypto/cpu_aarch64_linux.c",
        "third_party/boringssl/src/crypto/cpu_aarch64_openbsd.c",
        "third_party/boringssl/src/crypto/cpu_aarch64_sysreg.c",
        "third_party/boringssl/src/crypto/cpu_aarch64_win.c",
        "third_party/boringssl/src/crypto/cpu_arm_freebsd.c",
        "third_party/boringssl/src/crypto/cpu_arm_linux.c",
        "third_party/boringssl/src/crypto/cpu_intel.c",
        "third_party/boringssl/src/crypto/crypto.c",
        "third_party/boringssl/src/crypto/curve25519/curve25519.c",
        "third_party/boringssl/src/crypto/curve25519/curve25519_64_adx.c",
        "third_party/boringssl/src/crypto/curve25519/spake25519.c",
        "third_party/boringssl/src/crypto/des/des.c",
        "third_party/boringssl/src/crypto/dh_extra/dh_asn1.c",
        "third_party/boringssl/src/crypto/dh_extra/params.c",
        "third_party/boringssl/src/crypto/digest_extra/digest_extra.c",
        "third_party/boringssl/src/crypto/dsa/dsa.c",
        "third_party/boringssl/src/crypto/dsa/dsa_asn1.c",
        "third_party/boringssl/src/crypto/ec_extra/ec_asn1.c",
        "third_party/boringssl/src/crypto/ec_extra/ec_derive.c",
        "third_party/boringssl/src/crypto/ec_extra/hash_to_curve.c",
        "third_party/boringssl/src/crypto/ecdh_extra/ecdh_extra.c",
        "third_party/boringssl/src/crypto/ecdsa_extra/ecdsa_asn1.c",
        "third_party/boringssl/src/crypto/engine/engine.c",
        "third_party/boringssl/src/crypto/err/err.c",
        "third_party/boringssl/src/crypto/evp/evp.c",
        "third_party/boringssl/src/crypto/evp/evp_asn1.c",
        "third_party/boringssl/src/crypto/evp/evp_ctx.c",
        "third_party/boringssl/src/crypto/evp/p_dh.c",
        "third_party/boringssl/src/crypto/evp/p_dh_asn1.c",
        "third_party/boringssl/src/crypto/evp/p_dsa_asn1.c",
        "third_party/boringssl/src/crypto/evp/p_ec.c",
        "third_party/boringssl/src/crypto/evp/p_ec_asn1.c",
        "third_party/boringssl/src/crypto/evp/p_ed25519.c",
        "third_party/boringssl/src/crypto/evp/p_ed25519_asn1.c",
        "third_party/boringssl/src/crypto/evp/p_hkdf.c",
        "third_party/boringssl/src/crypto/evp/p_rsa.c",
        "third_party/boringssl/src/crypto/evp/p_rsa_asn1.c",
        "third_party/boringssl/src/crypto/evp/p_x25519.c",
        "third_party/boringssl/src/crypto/evp/p_x25519_asn1.c",
        "third_party/boringssl/src/crypto/evp/pbkdf.c",
        "third_party/boringssl/src/crypto/evp/print.c",
        "third_party/boringssl/src/crypto/evp/scrypt.c",
        "third_party/boringssl/src/crypto/evp/sign.c",
        "third_party/boringssl/src/crypto/ex_data.c",
        "third_party/boringssl/src/crypto/fipsmodule/bcm.c",
        "third_party/boringssl/src/crypto/fipsmodule/fips_shared_support.c",
        "third_party/boringssl/src/crypto/hpke/hpke.c",
        "third_party/boringssl/src/crypto/hrss/hrss.c",
        "third_party/boringssl/src/crypto/keccak/keccak.c",
        "third_party/boringssl/src/crypto/kyber/kyber.c",
        "third_party/boringssl/src/crypto/lhash/lhash.c",
        "third_party/boringssl/src/crypto/mem.c",
        "third_party/boringssl/src/crypto/obj/obj.c",
        "third_party/boringssl/src/crypto/obj/obj_xref.c",
        "third_party/boringssl/src/crypto/pem/pem_all.c",
        "third_party/boringssl/src/crypto/pem/pem_info.c",
        "third_party/boringssl/src/crypto/pem/pem_lib.c",
        "third_party/boringssl/src/crypto/pem/pem_oth.c",
        "third_party/boringssl/src/crypto/pem/pem_pk8.c",
        "third_party/boringssl/src/crypto/pem/pem_pkey.c",
        "third_party/boringssl/src/crypto/pem/pem_x509.c",
        "third_party/boringssl/src/crypto/pem/pem_xaux.c",
        "third_party/boringssl/src/crypto/pkcs7/pkcs7.c",
        "third_party/boringssl/src/crypto/pkcs7/pkcs7_x509.c",
        "third_party/boringssl/src/crypto/pkcs8/p5_pbev2.c",
        "third_party/boringssl/src/crypto/pkcs8/pkcs8.c",
        "third_party/boringssl/src/crypto/pkcs8/pkcs8_x509.c",
        "third_party/boringssl/src/crypto/poly1305/poly1305.c",
        "third_party/boringssl/src/crypto/poly1305/poly1305_arm.c",
        "third_party/boringssl/src/crypto/poly1305/poly1305_vec.c",
        "third_party/boringssl/src/crypto/pool/pool.c",
        "third_party/boringssl/src/crypto/rand_extra/deterministic.c",
        "third_party/boringssl/src/crypto/rand_extra/forkunsafe.c",
        "third_party/boringssl/src/crypto/rand_extra/getentropy.c",
        "third_party/boringssl/src/crypto/rand_extra/ios.c",
        "third_party/boringssl/src/crypto/rand_extra/passive.c",
        "third_party/boringssl/src/crypto/rand_extra/rand_extra.c",
        "third_party/boringssl/src/crypto/rand_extra/trusty.c",
        "third_party/boringssl/src/crypto/rand_extra/windows.c",
        "third_party/boringssl/src/crypto/rc4/rc4.c",
        "third_party/boringssl/src/crypto/refcount.c",
        "third_party/boringssl/src/crypto/rsa_extra/rsa_asn1.c",
        "third_party/boringssl/src/crypto/rsa_extra/rsa_crypt.c",
        "third_party/boringssl/src/crypto/rsa_extra/rsa_print.c",
        "third_party/boringssl/src/crypto/siphash/siphash.c",
        "third_party/boringssl/src/crypto/spx/address.c",
        "third_party/boringssl/src/crypto/spx/fors.c",
        "third_party/boringssl/src/crypto/spx/merkle.c",
        "third_party/boringssl/src/crypto/spx/spx.c",
        "third_party/boringssl/src/crypto/spx/spx_util.c",
        "third_party/boringssl/src/crypto/spx/thash.c",
        "third_party/boringssl/src/crypto/spx/wots.c",
        "third_party/boringssl/src/crypto/stack/stack.c",
        "third_party/boringssl/src/crypto/thread.c",
        "third_party/boringssl/src/crypto/thread_none.c",
        "third_party/boringssl/src/crypto/thread_pthread.c",
        "third_party/boringssl/src/crypto/thread_win.c",
        "third_party/boringssl/src/crypto/trust_token/pmbtoken.c",
        "third_party/boringssl/src/crypto/trust_token/trust_token.c",
        "third_party/boringssl/src/crypto/trust_token/voprf.c",
        "third_party/boringssl/src/crypto/x509/a_digest.c",
        "third_party/boringssl/src/crypto/x509/a_sign.c",
        "third_party/boringssl/src/crypto/x509/a_verify.c",
        "third_party/boringssl/src/crypto/x509/algorithm.c",
        "third_party/boringssl/src/crypto/x509/asn1_gen.c",
        "third_party/boringssl/src/crypto/x509/by_dir.c",
        "third_party/boringssl/src/crypto/x509/by_file.c",
        "third_party/boringssl/src/crypto/x509/i2d_pr.c",
        "third_party/boringssl/src/crypto/x509/name_print.c",
        "third_party/boringssl/src/crypto/x509/policy.c",
        "third_party/boringssl/src/crypto/x509/rsa_pss.c",
        "third_party/boringssl/src/crypto/x509/t_crl.c",
        "third_party/boringssl/src/crypto/x509/t_req.c",
        "third_party/boringssl/src/crypto/x509/t_x509.c",
        "third_party/boringssl/src/crypto/x509/t_x509a.c",
        "third_party/boringssl/src/crypto/x509/v3_akey.c",
        "third_party/boringssl/src/crypto/x509/v3_akeya.c",
        "third_party/boringssl/src/crypto/x509/v3_alt.c",
        "third_party/boringssl/src/crypto/x509/v3_bcons.c",
        "third_party/boringssl/src/crypto/x509/v3_bitst.c",
        "third_party/boringssl/src/crypto/x509/v3_conf.c",
        "third_party/boringssl/src/crypto/x509/v3_cpols.c",
        "third_party/boringssl/src/crypto/x509/v3_crld.c",
        "third_party/boringssl/src/crypto/x509/v3_enum.c",
        "third_party/boringssl/src/crypto/x509/v3_extku.c",
        "third_party/boringssl/src/crypto/x509/v3_genn.c",
        "third_party/boringssl/src/crypto/x509/v3_ia5.c",
        "third_party/boringssl/src/crypto/x509/v3_info.c",
        "third_party/boringssl/src/crypto/x509/v3_int.c",
        "third_party/boringssl/src/crypto/x509/v3_lib.c",
        "third_party/boringssl/src/crypto/x509/v3_ncons.c",
        "third_party/boringssl/src/crypto/x509/v3_ocsp.c",
        "third_party/boringssl/src/crypto/x509/v3_pcons.c",
        "third_party/boringssl/src/crypto/x509/v3_pmaps.c",
        "third_party/boringssl/src/crypto/x509/v3_prn.c",
        "third_party/boringssl/src/crypto/x509/v3_purp.c",
        "third_party/boringssl/src/crypto/x509/v3_skey.c",
        "third_party/boringssl/src/crypto/x509/v3_utl.c",
        "third_party/boringssl/src/crypto/x509/x509.c",
        "third_party/boringssl/src/crypto/x509/x509_att.c",
        "third_party/boringssl/src/crypto/x509/x509_cmp.c",
        "third_party/boringssl/src/crypto/x509/x509_d2.c",
        "third_party/boringssl/src/crypto/x509/x509_def.c",
        "third_party/boringssl/src/crypto/x509/x509_ext.c",
        "third_party/boringssl/src/crypto/x509/x509_lu.c",
        "third_party/boringssl/src/crypto/x509/x509_obj.c",
        "third_party/boringssl/src/crypto/x509/x509_req.c",
        "third_party/boringssl/src/crypto/x509/x509_set.c",
        "third_party/boringssl/src/crypto/x509/x509_trs.c",
        "third_party/boringssl/src/crypto/x509/x509_txt.c",
        "third_party/boringssl/src/crypto/x509/x509_v3.c",
        "third_party/boringssl/src/crypto/x509/x509_vfy.c",
        "third_party/boringssl/src/crypto/x509/x509_vpm.c",
        "third_party/boringssl/src/crypto/x509/x509cset.c",
        "third_party/boringssl/src/crypto/x509/x509name.c",
        "third_party/boringssl/src/crypto/x509/x509rset.c",
        "third_party/boringssl/src/crypto/x509/x509spki.c",
        "third_party/boringssl/src/crypto/x509/x_algor.c",
        "third_party/boringssl/src/crypto/x509/x_all.c",
        "third_party/boringssl/src/crypto/x509/x_attrib.c",
        "third_party/boringssl/src/crypto/x509/x_crl.c",
        "third_party/boringssl/src/crypto/x509/x_exten.c",
        "third_party/boringssl/src/crypto/x509/x_name.c",
        "third_party/boringssl/src/crypto/x509/x_pubkey.c",
        "third_party/boringssl/src/crypto/x509/x_req.c",
        "third_party/boringssl/src/crypto/x509/x_sig.c",
        "third_party/boringssl/src/crypto/x509/x_spki.c",
        "third_party/boringssl/src/crypto/x509/x_val.c",
        "third_party/boringssl/src/crypto/x509/x_x509.c",
        "third_party/boringssl/src/crypto/x509/x_x509a.c",
        "third_party/boringssl/src/gen/crypto/err_data.c",
        "third_party/boringssl/src/pki/cert_error_id.cc",
        "third_party/boringssl/src/pki/cert_error_params.cc",
        "third_party/boringssl/src/pki/cert_errors.cc",
        "third_party/boringssl/src/pki/cert_issuer_source_static.cc",
        "third_party/boringssl/src/pki/certificate.cc",
        "third_party/boringssl/src/pki/certificate_policies.cc",
        "third_party/boringssl/src/pki/common_cert_errors.cc",
        "third_party/boringssl/src/pki/crl.cc",
        "third_party/boringssl/src/pki/encode_values.cc",
        "third_party/boringssl/src/pki/extended_key_usage.cc",
        "third_party/boringssl/src/pki/general_names.cc",
        "third_party/boringssl/src/pki/input.cc",
        "third_party/boringssl/src/pki/ip_util.cc",
        "third_party/boringssl/src/pki/name_constraints.cc",
        "third_party/boringssl/src/pki/ocsp.cc",
        "third_party/boringssl/src/pki/ocsp_verify_result.cc",
        "third_party/boringssl/src/pki/parse_certificate.cc",
        "third_party/boringssl/src/pki/parse_name.cc",
        "third_party/boringssl/src/pki/parse_values.cc",
        "third_party/boringssl/src/pki/parsed_certificate.cc",
        "third_party/boringssl/src/pki/parser.cc",
        "third_party/boringssl/src/pki/path_builder.cc",
        "third_party/boringssl/src/pki/pem.cc",
        "third_party/boringssl/src/pki/revocation_util.cc",
        "third_party/boringssl/src/pki/signature_algorithm.cc",
        "third_party/boringssl/src/pki/simple_path_builder_delegate.cc",
        "third_party/boringssl/src/pki/string_util.cc",
        "third_party/boringssl/src/pki/trust_store.cc",
        "third_party/boringssl/src/pki/trust_store_collection.cc",
        "third_party/boringssl/src/pki/trust_store_in_memory.cc",
        "third_party/boringssl/src/pki/verify_certificate_chain.cc",
        "third_party/boringssl/src/pki/verify_error.cc",
        "third_party/boringssl/src/pki/verify_name_match.cc",
        "third_party/boringssl/src/pki/verify_signed_data.cc",
        "third_party/boringssl/src/ssl/bio_ssl.cc",
        "third_party/boringssl/src/ssl/d1_both.cc",
        "third_party/boringssl/src/ssl/d1_lib.cc",
        "third_party/boringssl/src/ssl/d1_pkt.cc",
        "third_party/boringssl/src/ssl/d1_srtp.cc",
        "third_party/boringssl/src/ssl/dtls_method.cc",
        "third_party/boringssl/src/ssl/dtls_record.cc",
        "third_party/boringssl/src/ssl/encrypted_client_hello.cc",
        "third_party/boringssl/src/ssl/extensions.cc",
        "third_party/boringssl/src/ssl/handoff.cc",
        "third_party/boringssl/src/ssl/handshake.cc",
        "third_party/boringssl/src/ssl/handshake_client.cc",
        "third_party/boringssl/src/ssl/handshake_server.cc",
        "third_party/boringssl/src/ssl/s3_both.cc",
        "third_party/boringssl/src/ssl/s3_lib.cc",
        "third_party/boringssl/src/ssl/s3_pkt.cc",
        "third_party/boringssl/src/ssl/ssl_aead_ctx.cc",
        "third_party/boringssl/src/ssl/ssl_asn1.cc",
        "third_party/boringssl/src/ssl/ssl_buffer.cc",
        "third_party/boringssl/src/ssl/ssl_cert.cc",
        "third_party/boringssl/src/ssl/ssl_cipher.cc",
        "third_party/boringssl/src/ssl/ssl_credential.cc",
        "third_party/boringssl/src/ssl/ssl_file.cc",
        "third_party/boringssl/src/ssl/ssl_key_share.cc",
        "third_party/boringssl/src/ssl/ssl_lib.cc",
        "third_party/boringssl/src/ssl/ssl_privkey.cc",
        "third_party/boringssl/src/ssl/ssl_session.cc",
        "third_party/boringssl/src/ssl/ssl_stat.cc",
        "third_party/boringssl/src/ssl/ssl_transcript.cc",
        "third_party/boringssl/src/ssl/ssl_versions.cc",
        "third_party/boringssl/src/ssl/ssl_x509.cc",
        "third_party/boringssl/src/ssl/t1_enc.cc",
        "third_party/boringssl/src/ssl/tls13_both.cc",
        "third_party/boringssl/src/ssl/tls13_client.cc",
        "third_party/boringssl/src/ssl/tls13_enc.cc",
        "third_party/boringssl/src/ssl/tls13_server.cc",
        "third_party/boringssl/src/ssl/tls_method.cc",
        "third_party/boringssl/src/ssl/tls_record.cc",
    ],
    host_supported: true,
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DBORINGSSL_ALLOW_CXX_RUNTIME",
        "-DBORINGSSL_IMPLEMENTATION",
        "-DBORINGSSL_NO_STATIC_INITIALIZER",
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-DOPENSSL_SMALL",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-O2",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/boringssl/src/include/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_arm64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-mno-outline",
            ],
        },
        android_riscv64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_x86: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        host: {
            cflags: [
                "-DCR_SYSROOT_KEY=20230611T210420Z-2",
                "-DUSE_AURA=1",
                "-DUSE_OZONE=1",
                "-DUSE_UDEV",
                "-D_FILE_OFFSET_BITS=64",
                "-D_LARGEFILE64_SOURCE",
                "-D_LARGEFILE_SOURCE",
                "-msse3",
            ],
            compile_multilib: "64",
        },
    },
}

// GN: //third_party/boringssl:boringssl_asm__testing
cc_library_static {
    name: "cronet_aml_third_party_boringssl_boringssl_asm__testing",
    srcs: [
        "third_party/boringssl/src/crypto/curve25519/asm/x25519-asm-arm.S",
        "third_party/boringssl/src/crypto/hrss/asm/poly_rq_mul.S",
        "third_party/boringssl/src/crypto/poly1305/poly1305_arm_asm.S",
        "third_party/boringssl/src/gen/bcm/aesni-gcm-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/aesni-gcm-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/aesni-x86-apple.S",
        "third_party/boringssl/src/gen/bcm/aesni-x86-linux.S",
        "third_party/boringssl/src/gen/bcm/aesni-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/aesni-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/aesv8-armv7-linux.S",
        "third_party/boringssl/src/gen/bcm/aesv8-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/aesv8-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/aesv8-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/aesv8-gcm-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/aesv8-gcm-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/aesv8-gcm-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/armv4-mont-linux.S",
        "third_party/boringssl/src/gen/bcm/armv8-mont-apple.S",
        "third_party/boringssl/src/gen/bcm/armv8-mont-linux.S",
        "third_party/boringssl/src/gen/bcm/armv8-mont-win.S",
        "third_party/boringssl/src/gen/bcm/bn-586-apple.S",
        "third_party/boringssl/src/gen/bcm/bn-586-linux.S",
        "third_party/boringssl/src/gen/bcm/bn-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/bn-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/bn-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/bsaes-armv7-linux.S",
        "third_party/boringssl/src/gen/bcm/co-586-apple.S",
        "third_party/boringssl/src/gen/bcm/co-586-linux.S",
        "third_party/boringssl/src/gen/bcm/ghash-armv4-linux.S",
        "third_party/boringssl/src/gen/bcm/ghash-neon-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/ghash-neon-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/ghash-neon-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/ghash-ssse3-x86-apple.S",
        "third_party/boringssl/src/gen/bcm/ghash-ssse3-x86-linux.S",
        "third_party/boringssl/src/gen/bcm/ghash-ssse3-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/ghash-ssse3-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/ghash-x86-apple.S",
        "third_party/boringssl/src/gen/bcm/ghash-x86-linux.S",
        "third_party/boringssl/src/gen/bcm/ghash-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/ghash-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/ghashv8-armv7-linux.S",
        "third_party/boringssl/src/gen/bcm/ghashv8-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/ghashv8-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/ghashv8-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/md5-586-apple.S",
        "third_party/boringssl/src/gen/bcm/md5-586-linux.S",
        "third_party/boringssl/src/gen/bcm/md5-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/md5-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/p256-armv8-asm-apple.S",
        "third_party/boringssl/src/gen/bcm/p256-armv8-asm-linux.S",
        "third_party/boringssl/src/gen/bcm/p256-armv8-asm-win.S",
        "third_party/boringssl/src/gen/bcm/p256-x86_64-asm-apple.S",
        "third_party/boringssl/src/gen/bcm/p256-x86_64-asm-linux.S",
        "third_party/boringssl/src/gen/bcm/p256_beeu-armv8-asm-apple.S",
        "third_party/boringssl/src/gen/bcm/p256_beeu-armv8-asm-linux.S",
        "third_party/boringssl/src/gen/bcm/p256_beeu-armv8-asm-win.S",
        "third_party/boringssl/src/gen/bcm/p256_beeu-x86_64-asm-apple.S",
        "third_party/boringssl/src/gen/bcm/p256_beeu-x86_64-asm-linux.S",
        "third_party/boringssl/src/gen/bcm/rdrand-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/rdrand-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/rsaz-avx2-apple.S",
        "third_party/boringssl/src/gen/bcm/rsaz-avx2-linux.S",
        "third_party/boringssl/src/gen/bcm/sha1-586-apple.S",
        "third_party/boringssl/src/gen/bcm/sha1-586-linux.S",
        "third_party/boringssl/src/gen/bcm/sha1-armv4-large-linux.S",
        "third_party/boringssl/src/gen/bcm/sha1-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/sha1-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/sha1-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/sha1-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/sha1-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/sha256-586-apple.S",
        "third_party/boringssl/src/gen/bcm/sha256-586-linux.S",
        "third_party/boringssl/src/gen/bcm/sha256-armv4-linux.S",
        "third_party/boringssl/src/gen/bcm/sha256-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/sha256-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/sha256-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/sha256-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/sha256-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/sha512-586-apple.S",
        "third_party/boringssl/src/gen/bcm/sha512-586-linux.S",
        "third_party/boringssl/src/gen/bcm/sha512-armv4-linux.S",
        "third_party/boringssl/src/gen/bcm/sha512-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/sha512-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/sha512-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/sha512-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/sha512-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/vpaes-armv7-linux.S",
        "third_party/boringssl/src/gen/bcm/vpaes-armv8-apple.S",
        "third_party/boringssl/src/gen/bcm/vpaes-armv8-linux.S",
        "third_party/boringssl/src/gen/bcm/vpaes-armv8-win.S",
        "third_party/boringssl/src/gen/bcm/vpaes-x86-apple.S",
        "third_party/boringssl/src/gen/bcm/vpaes-x86-linux.S",
        "third_party/boringssl/src/gen/bcm/vpaes-x86_64-apple.S",
        "third_party/boringssl/src/gen/bcm/vpaes-x86_64-linux.S",
        "third_party/boringssl/src/gen/bcm/x86-mont-apple.S",
        "third_party/boringssl/src/gen/bcm/x86-mont-linux.S",
        "third_party/boringssl/src/gen/bcm/x86_64-mont-apple.S",
        "third_party/boringssl/src/gen/bcm/x86_64-mont-linux.S",
        "third_party/boringssl/src/gen/bcm/x86_64-mont5-apple.S",
        "third_party/boringssl/src/gen/bcm/x86_64-mont5-linux.S",
        "third_party/boringssl/src/gen/crypto/aes128gcmsiv-x86_64-apple.S",
        "third_party/boringssl/src/gen/crypto/aes128gcmsiv-x86_64-linux.S",
        "third_party/boringssl/src/gen/crypto/chacha-armv4-linux.S",
        "third_party/boringssl/src/gen/crypto/chacha-armv8-apple.S",
        "third_party/boringssl/src/gen/crypto/chacha-armv8-linux.S",
        "third_party/boringssl/src/gen/crypto/chacha-armv8-win.S",
        "third_party/boringssl/src/gen/crypto/chacha-x86-apple.S",
        "third_party/boringssl/src/gen/crypto/chacha-x86-linux.S",
        "third_party/boringssl/src/gen/crypto/chacha-x86_64-apple.S",
        "third_party/boringssl/src/gen/crypto/chacha-x86_64-linux.S",
        "third_party/boringssl/src/gen/crypto/chacha20_poly1305_armv8-apple.S",
        "third_party/boringssl/src/gen/crypto/chacha20_poly1305_armv8-linux.S",
        "third_party/boringssl/src/gen/crypto/chacha20_poly1305_armv8-win.S",
        "third_party/boringssl/src/gen/crypto/chacha20_poly1305_x86_64-apple.S",
        "third_party/boringssl/src/gen/crypto/chacha20_poly1305_x86_64-linux.S",
        "third_party/boringssl/src/gen/test_support/trampoline-armv4-linux.S",
        "third_party/boringssl/src/gen/test_support/trampoline-armv8-apple.S",
        "third_party/boringssl/src/gen/test_support/trampoline-armv8-linux.S",
        "third_party/boringssl/src/gen/test_support/trampoline-armv8-win.S",
        "third_party/boringssl/src/gen/test_support/trampoline-x86-apple.S",
        "third_party/boringssl/src/gen/test_support/trampoline-x86-linux.S",
        "third_party/boringssl/src/gen/test_support/trampoline-x86_64-apple.S",
        "third_party/boringssl/src/gen/test_support/trampoline-x86_64-linux.S",
        "third_party/boringssl/src/third_party/fiat/asm/fiat_curve25519_adx_mul.S",
        "third_party/boringssl/src/third_party/fiat/asm/fiat_curve25519_adx_square.S",
        "third_party/boringssl/src/third_party/fiat/asm/fiat_p256_adx_mul.S",
        "third_party/boringssl/src/third_party/fiat/asm/fiat_p256_adx_sqr.S",
    ],
    host_supported: true,
    defaults: [
        "cronet_aml_cc_defaults",
    ],
    cflags: [
        "-DCR_CLANG_REVISION=\"llvmorg-19-init-8091-gab037c4f-22\"",
        "-DCR_LIBCXX_REVISION=e3b94d0e5b86883fd77696bf10dc33ba250ba99b",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DNDEBUG",
        "-DNO_UNWIND_TABLES",
        "-DNVALGRIND",
        "-DOFFICIAL_BUILD",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
        "-D_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-fdata-sections",
        "-ffunction-sections",
        "-fno-asynchronous-unwind-tables",
        "-fno-unwind-tables",
        "-fstack-protector",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-g1",
    ],
    include_dirs: [
        "external/cronet/",
        "external/cronet/buildtools/third_party/libc++/",
        "external/cronet/third_party/boringssl/src/include/",
        "external/cronet/third_party/libc++/src/include",
        "external/cronet/third_party/libc++abi/src/include",
    ],
    cpp_std: "c++20",
    ldflags: [
        "-Wl,--as-needed",
        "-Wl,--gc-sections",
        "-Wl,--icf=all",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
    target: {
        android_arm: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_arm64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-O2",
                "-mno-outline",
            ],
        },
        android_riscv64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
            ],
        },
        android_x86: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        android_x86_64: {
            cflags: [
                "-DANDROID",
                "-DANDROID_NDK_VERSION_ROLL=r26b_1",
                "-DHAVE_SYS_UIO_H",
                "-D_FORTIFY_SOURCE=2",
                "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
                "-msse3",
            ],
        },
        host: {
            cflags: [
                "-DCR_SYSROOT_KEY=20230611T210420Z-2",
                "-DUSE_AURA=1",
                "-DUSE_OZONE=1",
                "-DUSE_UDEV",
                "-D_FILE_OFFSET_BITS=64",
                "-D_FORTIFY_SOURCE=2",
                "-D_LARGEFILE64_SOURCE",
                "-D_LARGEFILE_SOURCE",
                "-O2",
                "-msse3",
            ],
            compile_multilib: "64",
        },
    },
}

// GN: //url:buildflags
cc_genrule {
    name: "cronet_aml_url_buildflags",
    cmd: "mkdir -p $(genDir)/url && echo '--flags USE_PLATFORM_ICU_ALTERNATIVES=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//url:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "url/buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //url:buildflags__testing
cc_genrule {
    name: "cronet_aml_url_buildflags__testing",
    cmd: "mkdir -p $(genDir)/url && echo '--flags USE_PLATFORM_ICU_ALTERNATIVES=\"true\"' | " +
         "$(location build/write_buildflag_header.py) --output " +
         "$(out) " +
         "--rulename " +
         "//url:buildflags " +
         "--gen-dir " +
         ". " +
         "--definitions " +
         "/dev/stdin",
    out: [
        "url/buildflags.h",
    ],
    tool_files: [
        "build/write_buildflag_header.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //url:url_jni_headers__action
cc_genrule {
    name: "cronet_aml_url_url_jni_headers__action",
    srcs: [
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/url/url_jni_headers &&  " +
         "mkdir -p $(genDir)/url && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/url/url_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/url/url_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/url/url_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "IDNStringUtil_jni.h " +
         "--input-file " +
         "$(location url/android/java/src/org/chromium/url/IDNStringUtil.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "url/url_jni_headers.srcjar",
        "url/url_jni_headers/IDNStringUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //url:url_jni_headers__action
java_genrule {
    name: "cronet_aml_url_url_jni_headers__action__java",
    srcs: [
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/url/url_jni_headers &&  " +
         "mkdir -p $(genDir)/url && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/url/url_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/url/url_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/url/url_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "IDNStringUtil_jni.h " +
         "--input-file " +
         "$(location url/android/java/src/org/chromium/url/IDNStringUtil.java) " +
         "--package-prefix " +
         "android.net.connectivity",
    out: [
        "url/url_jni_headers.srcjar",
        "url/url_jni_headers/IDNStringUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //url:url_jni_headers__action__testing
cc_genrule {
    name: "cronet_aml_url_url_jni_headers__action__testing",
    srcs: [
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/url/url_jni_headers &&  " +
         "mkdir -p $(genDir)/url && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/url/url_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/url/url_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/url/url_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "IDNStringUtil_jni.h " +
         "--input-file " +
         "$(location url/android/java/src/org/chromium/url/IDNStringUtil.java)",
    out: [
        "url/url_jni_headers.srcjar",
        "url/url_jni_headers/IDNStringUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    apex_available: [
        "com.android.tethering",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}

// GN: //url:url_jni_headers__action__testing
java_genrule {
    name: "cronet_aml_url_url_jni_headers__action__testing__java",
    srcs: [
        "url/android/java/src/org/chromium/url/IDNStringUtil.java",
    ],
    cmd: "mkdir -p $(genDir)/jni_headers/url/url_jni_headers &&  " +
         "mkdir -p $(genDir)/url && $(location third_party/jni_zero/jni_zero.py) from-source " +
         "--output-dir " +
         "$(genDir)/url/url_jni_headers " +
         "--extra-include " +
         "third_party/jni_zero/jni_zero_internal.h " +
         "--srcjar-path " +
         "$(genDir)/url/url_jni_headers.srcjar " +
         "--placeholder-srcjar-path " +
         "$(genDir)/url/url_jni_headers_placeholder.srcjar " +
         "--use-proxy-hash " +
         "--output-name " +
         "IDNStringUtil_jni.h " +
         "--input-file " +
         "$(location url/android/java/src/org/chromium/url/IDNStringUtil.java)",
    out: [
        "url/url_jni_headers.srcjar",
        "url/url_jni_headers/IDNStringUtil_jni.h",
    ],
    tool_files: [
        "third_party/jni_zero/codegen/called_by_native_header.py",
        "third_party/jni_zero/codegen/convert_type.py",
        "third_party/jni_zero/codegen/header_common.py",
        "third_party/jni_zero/codegen/natives_header.py",
        "third_party/jni_zero/codegen/placeholder_gen_jni_java.py",
        "third_party/jni_zero/codegen/placeholder_java_type.py",
        "third_party/jni_zero/codegen/proxy_impl_java.py",
        "third_party/jni_zero/common.py",
        "third_party/jni_zero/java_lang_classes.py",
        "third_party/jni_zero/java_types.py",
        "third_party/jni_zero/jni_generator.py",
        "third_party/jni_zero/jni_registration_generator.py",
        "third_party/jni_zero/jni_zero.py",
        "third_party/jni_zero/parse.py",
        "third_party/jni_zero/proxy.py",
    ],
    visibility: [
        "//external/cronet:__subpackages__",
    ],
}
